{"version":3,"sources":["../out/formValidator.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","FormValidator","errors_1","require","form","validateOnChanged","errors","argumentNull","fields","elementEvents","field","push","map","o","errorElement","filter","forEach","style","display","name","fieldErrorElement","error","removeProperty","innerHTML","element","querySelectorAll","elementNotExists","getElementsByClassName","errorClassName","fieldElement","document","createElement","className","nextSibling","parentElement","insertBefore","appendChild","ps","Array","i","length","condition","p","checkField","checkFieldAsync","all","checkResults","isAsync","validateFunc","checking","catch","addEventListener","elementType","type","elements","bindElementEvent","depends","j","dependResult","Error","dependIsOK","rules","rule","fieldElementCanntNull","elementValue","isPass","validate","showElement","console","assert","elementName","errorText","replace","tagName","inputElement","checked"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FormValidator = void 0;\r\nconst errors_1 = require(\"./errors\");\r\n/**\r\n * 表单验证器，用于对表单中的字段进行验证\r\n */\r\nclass FormValidator {\r\n    constructor(form, ...fields) {\r\n        /** 输入框的值发生改变，是否重新校验该输入框的值，默认为 true */\r\n        this.validateOnChanged = true;\r\n        if (!form)\r\n            throw errors_1.errors.argumentNull('form');\r\n        this.fields = fields || [];\r\n        this.form = form;\r\n        this.elementEvents = {};\r\n    }\r\n    appendField(field) {\r\n        this.fields.push(field);\r\n    }\r\n    /**\r\n     * 清除表单的错误信息\r\n     */\r\n    clearErrors() {\r\n        this.fields.map(o => o.errorElement)\r\n            .filter(o => o != null)\r\n            .forEach(o => o.style.display = 'none');\r\n    }\r\n    /**\r\n     * 清除表单的指定元素错误信息\r\n     * @param name 指定的元素名称\r\n     */\r\n    clearElementError(name) {\r\n        if (!name)\r\n            throw errors_1.errors.argumentNull('name');\r\n        let fields = this.fields.filter(o => o.name == name);\r\n        for (let field of fields) {\r\n            let errorElement = this.fieldErrorElement(field);\r\n            errorElement.style.display = 'none';\r\n        }\r\n    }\r\n    /**\r\n     * 设置表单的指定元素错误信息\r\n     * @param name 指定的元素名称\r\n     * @param error 错误信息\r\n     */\r\n    setElementError(name, error) {\r\n        if (!name)\r\n            throw errors_1.errors.argumentNull('name');\r\n        if (!error)\r\n            throw errors_1.errors.argumentNull('error');\r\n        let fields = this.fields.filter(o => o.name == name);\r\n        for (let field of fields) {\r\n            let errorElement = this.fieldErrorElement(field);\r\n            errorElement.style.removeProperty('display');\r\n            errorElement.innerHTML = error;\r\n        }\r\n    }\r\n    fieldElement(field) {\r\n        let name = field.name;\r\n        let element = this.form.querySelectorAll(`[name='${name}']`)[0];\r\n        if (element == null)\r\n            throw errors_1.errors.elementNotExists(name);\r\n        return element;\r\n    }\r\n    fieldErrorElement(field) {\r\n        if (!field.errorElement) {\r\n            let errorElement = this.form.getElementsByClassName(`${FormValidator.errorClassName} ${field.name}`)[0];\r\n            if (!errorElement) {\r\n                let element = this.fieldElement(field);\r\n                errorElement = document.createElement(\"span\");\r\n                errorElement.className = FormValidator.errorClassName;\r\n                errorElement.style.display = 'none';\r\n                if (element.nextSibling)\r\n                    element.parentElement.insertBefore(errorElement, element.nextSibling);\r\n                else\r\n                    element.parentElement.appendChild(errorElement);\r\n            }\r\n            field.errorElement = errorElement;\r\n        }\r\n        return field.errorElement;\r\n        // return errorElement;\r\n    }\r\n    /**\r\n     * 验证字段\r\n     */\r\n    check() {\r\n        let ps = new Array();\r\n        for (let i = 0; i < this.fields.length; i++) {\r\n            let field = this.fields[i];\r\n            let element = this.fieldElement(field);\r\n            if (field.condition && field.condition(element) == false)\r\n                continue;\r\n            let p = this.checkField(field);\r\n            ps.push(p);\r\n        }\r\n        let result = ps.filter(o => o == false).length == 0;\r\n        return result;\r\n    }\r\n    /**\r\n     * 异步验证字段\r\n     */\r\n    checkAsync() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let ps = new Array();\r\n            for (let i = 0; i < this.fields.length; i++) {\r\n                let field = this.fields[i];\r\n                let element = this.fieldElement(field);\r\n                if (field.condition && field.condition(element) == false)\r\n                    continue;\r\n                let p = this.checkFieldAsync(field);\r\n                ps.push(p);\r\n            }\r\n            let checkResults = yield Promise.all(ps);\r\n            let result = checkResults.filter(o => o == false).length == 0;\r\n            return result;\r\n        });\r\n    }\r\n    bindElementEvent(field, isAsync) {\r\n        if (this.elementEvents[field.name]) {\r\n            return;\r\n        }\r\n        let element = this.fieldElement(field);\r\n        let validateFunc = (() => {\r\n            let checking = false;\r\n            return () => {\r\n                if (checking)\r\n                    return;\r\n                checking = true;\r\n                // isAsync ? this.checkFieldAsync(field) : this.checkField(field);\r\n                if (isAsync) {\r\n                    this.checkFieldAsync(field)\r\n                        .then(() => checking = false)\r\n                        .catch(() => checking = false);\r\n                }\r\n                else {\r\n                    this.checkField(field);\r\n                    checking = false;\r\n                }\r\n            };\r\n        })();\r\n        if (this.validateOnChanged) {\r\n            element.addEventListener('change', validateFunc);\r\n            let elementType = element.type || \"text\";\r\n            if (elementType == \"text\" || elementType == \"password\") {\r\n                element.addEventListener('keyup', validateFunc);\r\n            }\r\n            else if (elementType == \"radio\") {\r\n                let name = element.name;\r\n                let elements = this.form.querySelectorAll(`[name='${name}']`);\r\n                for (let i = 0; i < elements.length; i++) {\r\n                    if (elements[i] == element) {\r\n                        continue;\r\n                    }\r\n                    elements[i].addEventListener(\"change\", validateFunc);\r\n                }\r\n            }\r\n        }\r\n        this.elementEvents[field.name] = true;\r\n    }\r\n    checkField(field) {\r\n        this.bindElementEvent(field, false);\r\n        let element = this.fieldElement(field);\r\n        let depends = field.depends || [];\r\n        for (let j = 0; j < depends.length; j++) {\r\n            let dependResult = depends[j](element);\r\n            if (typeof dependResult == 'object') {\r\n                throw new Error('Please use checkAsync method.');\r\n            }\r\n            let dependIsOK = dependResult;\r\n            if (!dependIsOK)\r\n                return false;\r\n        }\r\n        for (let j = 0; j < field.rules.length; j++) {\r\n            let rule = field.rules[j];\r\n            let element = this.fieldElement(field);\r\n            if (element == null)\r\n                throw errors_1.errors.fieldElementCanntNull();\r\n            let value = this.elementValue(element);\r\n            let isPass = rule.validate(value);\r\n            if (typeof isPass == 'object') {\r\n                throw new Error('Please use checkAsync method.');\r\n            }\r\n            this.showElement(!isPass, field, rule, element);\r\n            if (!isPass)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    checkFieldAsync(field) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.bindElementEvent(field, true);\r\n            let element = this.fieldElement(field);\r\n            let depends = field.depends || [];\r\n            for (let j = 0; j < depends.length; j++) {\r\n                let dependResult = depends[j](element);\r\n                if (typeof dependResult == 'boolean') {\r\n                    dependResult = Promise.resolve(dependResult);\r\n                }\r\n                let dependIsOK = yield dependResult;\r\n                if (!dependIsOK)\r\n                    return false;\r\n            }\r\n            for (let j = 0; j < field.rules.length; j++) {\r\n                let rule = field.rules[j];\r\n                let element = this.fieldElement(field);\r\n                if (element == null)\r\n                    throw errors_1.errors.fieldElementCanntNull();\r\n                let value = this.elementValue(element);\r\n                let p = rule.validate(value);\r\n                if (typeof p == 'boolean') {\r\n                    p = Promise.resolve(p);\r\n                }\r\n                let isPass = yield p;\r\n                this.showElement(!isPass, field, rule, element);\r\n                if (!isPass)\r\n                    return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    showElement(display, field, rule, element) {\r\n        let errorElement = this.fieldErrorElement(field);\r\n        console.assert(errorElement != null, 'errorElement cannt be null.');\r\n        if (rule.error != null) {\r\n            errorElement = field.errorElement;\r\n            let name = this.elementName(element);\r\n            let errorText = typeof rule.error == 'string' ? rule.error : rule.error() || '';\r\n            errorElement.innerHTML = errorText.replace('%s', name);\r\n        }\r\n        if (display) {\r\n            errorElement.style.removeProperty('display');\r\n        }\r\n        else {\r\n            errorElement.style.display = 'none';\r\n        }\r\n    }\r\n    /**\r\n     * 异步验证 HTML 元素\r\n     * @param name HTML 元素名称\r\n     */\r\n    checkElementAsync(name) {\r\n        let field = this.fields.filter(o => o.name == name)[0];\r\n        if (!field)\r\n            throw errors_1.errors.elementNotExists(name);\r\n        return this.checkFieldAsync(field);\r\n    }\r\n    /**\r\n     * 同步验证 HTML 元素\r\n     * @param name HTML 元素名称\r\n     */\r\n    checkElement(name) {\r\n        let field = this.fields.filter(o => o.name == name)[0];\r\n        if (!field)\r\n            throw errors_1.errors.elementNotExists(name);\r\n        return this.checkField(field);\r\n    }\r\n    elementValue(element) {\r\n        if (element.tagName == \"TEXTAREA\") {\r\n            return element.value;\r\n        }\r\n        let inputElement = element;\r\n        if (inputElement.type == \"radio\") {\r\n            let elements = this.form.querySelectorAll(`[name='${inputElement.name}']`);\r\n            for (let i = 0; i < elements.length; i++) {\r\n                if (elements[i].checked) {\r\n                    return elements[i].value;\r\n                }\r\n            }\r\n            return \"\";\r\n        }\r\n        return element.value;\r\n    }\r\n    elementName(element) {\r\n        if (element.tagName == \"TEXTAREA\") {\r\n            return element.name;\r\n        }\r\n        return element.name;\r\n    }\r\n}\r\nexports.FormValidator = FormValidator;\r\nFormValidator.errorClassName = 'validationMessage';\r\n// }\r\n"],"file":"formValidator.js"}