import * as React from "react";
import { ComponentData } from "maishu-jueying-core";
import { FormValidator } from "maishu-dilu";
export interface EditorProps extends React.Props<PropertyEditor> {
    empty: string | JSX.Element;
    customRender?: (editComponents: ComponentData[], items: PropertyEditorInfo[]) => JSX.Element;
}
interface EditorState {
}
export interface PropertyEditorInfo {
    group: GroupedEditor["group"];
    prop: string;
    displayName: string;
    editor: React.ReactElement<any>;
}
export declare type GroupedEditor = {
    /** 用于对编辑器进行分组，方便查看各个属性 */
    group: string;
    prop: string;
    displayName: string;
    editor: React.ReactElement<any>;
};
export declare let defaultGroupName: string;
export declare class PropertyEditor extends React.Component<EditorProps, EditorState> {
    private _element;
    private _validator;
    private _validateFields;
    constructor(props: EditorProps);
    private getEditors;
    private propValue;
    render(): JSX.Element;
    get element(): HTMLElement;
    get validator(): FormValidator;
}
export declare class ErrorBoundary extends React.Component<{}, {
    error?: Error;
}> {
    constructor(props: {});
    componentDidCatch(error: Error, info: any): void;
    render(): {} | null | undefined;
}
export {};
