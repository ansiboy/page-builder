"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.entities = exports.Column = exports.DataHelper = exports.createDatabaseIfNotExists = exports.DataContext = exports.PrimaryColumn = exports.OneToOne = exports.OneToMany = exports.Not = exports.ManyToOne = exports.ManyToMany = exports.JoinColumn = exports.IsNull = exports.InsertResult = exports.InsertQueryBuilder = exports.Index = exports.In = exports.Repository = exports.getManager = exports.getConnection = exports.getConnectionManager = exports.Exclusion = exports.EventSubscriber = exports.Equal = exports.EntitySchema = exports.EntityRepository = exports.EntityMetadata = exports.EntityManager = exports.Entity = exports.createConnection = exports.Connection = void 0;
var typeorm_1 = require("typeorm");
Object.defineProperty(exports, "Connection", { enumerable: true, get: function () { return typeorm_1.Connection; } });
Object.defineProperty(exports, "createConnection", { enumerable: true, get: function () { return typeorm_1.createConnection; } });
Object.defineProperty(exports, "Entity", { enumerable: true, get: function () { return typeorm_1.Entity; } });
Object.defineProperty(exports, "EntityManager", { enumerable: true, get: function () { return typeorm_1.EntityManager; } });
Object.defineProperty(exports, "EntityMetadata", { enumerable: true, get: function () { return typeorm_1.EntityMetadata; } });
Object.defineProperty(exports, "EntityRepository", { enumerable: true, get: function () { return typeorm_1.EntityRepository; } });
Object.defineProperty(exports, "EntitySchema", { enumerable: true, get: function () { return typeorm_1.EntitySchema; } });
Object.defineProperty(exports, "Equal", { enumerable: true, get: function () { return typeorm_1.Equal; } });
Object.defineProperty(exports, "EventSubscriber", { enumerable: true, get: function () { return typeorm_1.EventSubscriber; } });
Object.defineProperty(exports, "Exclusion", { enumerable: true, get: function () { return typeorm_1.Exclusion; } });
Object.defineProperty(exports, "getConnectionManager", { enumerable: true, get: function () { return typeorm_1.getConnectionManager; } });
Object.defineProperty(exports, "getConnection", { enumerable: true, get: function () { return typeorm_1.getConnection; } });
Object.defineProperty(exports, "getManager", { enumerable: true, get: function () { return typeorm_1.getManager; } });
Object.defineProperty(exports, "Repository", { enumerable: true, get: function () { return typeorm_1.Repository; } });
Object.defineProperty(exports, "In", { enumerable: true, get: function () { return typeorm_1.In; } });
Object.defineProperty(exports, "Index", { enumerable: true, get: function () { return typeorm_1.Index; } });
Object.defineProperty(exports, "InsertQueryBuilder", { enumerable: true, get: function () { return typeorm_1.InsertQueryBuilder; } });
Object.defineProperty(exports, "InsertResult", { enumerable: true, get: function () { return typeorm_1.InsertResult; } });
Object.defineProperty(exports, "IsNull", { enumerable: true, get: function () { return typeorm_1.IsNull; } });
Object.defineProperty(exports, "JoinColumn", { enumerable: true, get: function () { return typeorm_1.JoinColumn; } });
Object.defineProperty(exports, "ManyToMany", { enumerable: true, get: function () { return typeorm_1.ManyToMany; } });
Object.defineProperty(exports, "ManyToOne", { enumerable: true, get: function () { return typeorm_1.ManyToOne; } });
Object.defineProperty(exports, "Not", { enumerable: true, get: function () { return typeorm_1.Not; } });
Object.defineProperty(exports, "OneToMany", { enumerable: true, get: function () { return typeorm_1.OneToMany; } });
Object.defineProperty(exports, "OneToOne", { enumerable: true, get: function () { return typeorm_1.OneToOne; } });
Object.defineProperty(exports, "PrimaryColumn", { enumerable: true, get: function () { return typeorm_1.PrimaryColumn; } });
var data_context_1 = require("./data-context");
Object.defineProperty(exports, "DataContext", { enumerable: true, get: function () { return data_context_1.DataContext; } });
var data_helper_1 = require("./data-helper");
Object.defineProperty(exports, "createDatabaseIfNotExists", { enumerable: true, get: function () { return data_helper_1.createDatabaseIfNotExists; } });
Object.defineProperty(exports, "DataHelper", { enumerable: true, get: function () { return data_helper_1.DataHelper; } });
var column_1 = require("./column");
Object.defineProperty(exports, "Column", { enumerable: true, get: function () { return column_1.Column; } });
var decorators_1 = require("./decorators");
Object.defineProperty(exports, "entities", { enumerable: true, get: function () { return decorators_1.entities; } });
//==================================================================================================
const AbstractSqliteDriver_1 = require("typeorm/driver/sqlite-abstract/AbstractSqliteDriver");
// AbstractSqliteDriver.prototype.supportedDataTypes = {
//     get() {
//     }
// }
Object.assign(AbstractSqliteDriver_1.AbstractSqliteDriver, {
    get supportedDataTypes() {
        return [
            "int",
            "integer",
            "tinyint",
            "smallint",
            "mediumint",
            "bigint",
            "unsigned big int",
            "int2",
            "int8",
            "integer",
            "character",
            "varchar",
            "varying character",
            "nchar",
            "native character",
            "nvarchar",
            "text",
            "clob",
            "text",
            "blob",
            "real",
            "double",
            "double precision",
            "float",
            "real",
            "numeric",
            "decimal",
            "boolean",
            "date",
            "time",
            "datetime",
            "json"
        ];
    }
});
if (AbstractSqliteDriver_1.AbstractSqliteDriver.prototype.supportedDataTypes != null && AbstractSqliteDriver_1.AbstractSqliteDriver.prototype.supportedDataTypes.indexOf("json") < 0) {
    AbstractSqliteDriver_1.AbstractSqliteDriver.prototype.supportedDataTypes.push("json");
}
//==================================================================================================
