export declare let errors: {
    arugmentNull(argumentName: string): Error;
    filePathNotExtention(virtualPath: string): Error;
    vitualPathRequirePhysicalPath(virtualPath: string, physicalPath: string): Error;
    notPhysicalPath(physicalPath: string): Error;
    argumentNull(argumentName: string): Error;
    argumentFieldNull(fieldName: string, argumentName: string): Error;
    argumentTypeIncorrect(argumentName: string, expectedType: string): Error;
    arrayEmpty(argumentName: string): Error;
    virtualPathNotStartsWithSlash(path: string): Error;
    virtualPathEndsWithSlash(path: string): Error;
    directoryNotExists(path: string): Error;
    directoryExists(path: string): Error;
    physicalPathNotExists(physicalPath: string): Error;
    pathExists(path: string): Error;
    pathNotDirectory(path: string): Error;
    pathNotFile(path: string): Error;
    physicalPathExists(physicalPath: string, dirName: string): Error;
    invalidVirtualPath(virtualPath: string): Error;
    fileNotFound(virtualPath: string, searchIn: string[]): Error;
    directoryNotFound(virtualPath: string, searchIn: string[]): Error;
    pageNotFound(path: string): Error;
    fileTypeNotSupport(ext: string): Error;
    connectionClose(): Error;
    requestNotReadable(): Error;
    unexpectedNullValue(variableName: string): Error;
    contentTransformResultNull(): Error;
    requestProcessorTypeExists(name: string): Error;
};
