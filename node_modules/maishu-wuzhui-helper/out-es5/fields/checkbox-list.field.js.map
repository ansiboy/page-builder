{"version":3,"sources":["../../out/fields/checkbox-list.field.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","w","require","checkboxListField","params","field","CheckboxListField","checkboxs","_params","dataSource","select","r","dataItems","element","document","createElement","getDataItems","i","length","console","assert","nameField","valueField","name","itemCtrl","innerHTML","className","appendChild","checkbox","querySelector","self","c","checked","push","map","o","BoundField"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;AACA,IAAIA,SAAS,GAAI,UAAQ,SAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,IAAAA,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASAO,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEf,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMgB,CAAC,GAAGC,OAAO,CAAC,eAAD,CAAjB;;AACA,SAASC,iBAAT,CAA2BC,MAA3B,EAAmC;AAC/B,MAAIC,KAAK,GAAG,IAAIC,iBAAJ,CAAsBF,MAAtB,CAAZ;AACA,SAAOC,KAAP;AACH;;AACDL,OAAO,CAACG,iBAAR,GAA4BA,iBAA5B;;IACMG,iB;;;;;AACF,6BAAYF,MAAZ,EAAoB;AAAA;;AAAA;;AAChB,2FAAMA,MAAN;AACA,UAAKG,SAAL,GAAiB,EAAjB;AAFgB;AAGnB;;;;mCACc;AACX,aAAO5B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB;AAAA;AAAA,8BAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3B,uBAAM,KAAK6B,OAAL,CAAaC,UAAb,CAAwBC,MAAxB,EAAN;;AAD2B;AAC/BC,gBAAAA,CAD+B;AAAA,iDAE5BA,CAAC,CAACC,SAF0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAIH;;;oCACe;AAAA;;AACZ,UAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACA,WAAKC,YAAL,GAAoBpB,IAApB,CAAyB,UAAAgB,SAAS,EAAI;AAClC,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAAS,CAACM,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCE,UAAAA,OAAO,CAACC,MAAR,CAAe,MAAI,CAACZ,OAAL,CAAaa,SAAb,IAA0B,IAAzC;AACAF,UAAAA,OAAO,CAACC,MAAR,CAAe,MAAI,CAACZ,OAAL,CAAac,UAAb,IAA2B,IAA1C;AACA,cAAIC,IAAI,GAAGX,SAAS,CAACK,CAAD,CAAT,CAAa,MAAI,CAACT,OAAL,CAAaa,SAA1B,CAAX;AACA,cAAIpC,KAAK,GAAG2B,SAAS,CAACK,CAAD,CAAT,CAAa,MAAI,CAACT,OAAL,CAAac,UAA1B,CAAZ;AACA,cAAIE,QAAQ,GAAGV,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACAS,UAAAA,QAAQ,CAACC,SAAT,qDAA6DxC,KAA7D,gBAAuEsC,IAAvE;AACAC,UAAAA,QAAQ,CAACE,SAAT,GAAqB,UAArB;AACAb,UAAAA,OAAO,CAACc,WAAR,CAAoBH,QAApB;AACA,cAAII,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,OAAvB,CAAf;AACA,UAAA,MAAI,CAACtB,SAAL,WAAkBtB,KAAlB,KAA6B2C,QAA7B;AACH;AACJ,OAbD;AAcA,UAAIE,IAAI,GAAG,IAAX;AACA,aAAO;AACHjB,QAAAA,OAAO,EAAPA,OADG;;AAEH,YAAI5B,KAAJ,GAAY;AACR,cAAIsB,SAAS,GAAG,EAAhB;;AACA,eAAK,IAAIwB,CAAT,IAAcD,IAAI,CAACvB,SAAnB,EAA8B;AAC1B,gBAAIuB,IAAI,CAACvB,SAAL,CAAewB,CAAf,EAAkBC,OAAtB,EAA+B;AAC3BzB,cAAAA,SAAS,CAAC0B,IAAV,CAAeH,IAAI,CAACvB,SAAL,CAAewB,CAAf,CAAf;AACH;AACJ;;AACD,cAAI9C,KAAK,GAAGsB,SAAS,CAAC2B,GAAV,CAAc,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAClD,KAAN;AAAA,WAAf,CAAZ;AACA,iBAAOA,KAAP;AACH,SAXE;;AAYH,YAAIA,KAAJ,CAAUA,KAAV,EAAiB;AACb,cAAI2C,QAAQ,GAAGE,IAAI,CAACvB,SAAL,WAAkBtB,KAAlB,EAAf;;AACA,cAAI2C,QAAJ,EAAc;AACVA,YAAAA,QAAQ,CAACI,OAAT,GAAmB,IAAnB;AACH;AACJ;;AAjBE,OAAP;AAmBH;;;;EA/C2B/B,CAAC,CAACmC,U","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst w = require(\"maishu-wuzhui\");\r\nfunction checkboxListField(params) {\r\n    let field = new CheckboxListField(params);\r\n    return field;\r\n}\r\nexports.checkboxListField = checkboxListField;\r\nclass CheckboxListField extends w.BoundField {\r\n    constructor(params) {\r\n        super(params);\r\n        this.checkboxs = {};\r\n    }\r\n    getDataItems() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let r = yield this._params.dataSource.select();\r\n            return r.dataItems;\r\n        });\r\n    }\r\n    createControl() {\r\n        let element = document.createElement(\"div\");\r\n        this.getDataItems().then(dataItems => {\r\n            for (let i = 0; i < dataItems.length; i++) {\r\n                console.assert(this._params.nameField != null);\r\n                console.assert(this._params.valueField != null);\r\n                let name = dataItems[i][this._params.nameField];\r\n                let value = dataItems[i][this._params.valueField];\r\n                let itemCtrl = document.createElement(\"div\");\r\n                itemCtrl.innerHTML = `<label><input type=\"checkbox\" value=\"${value}\">${name}</label>`;\r\n                itemCtrl.className = \"checkbox\";\r\n                element.appendChild(itemCtrl);\r\n                let checkbox = itemCtrl.querySelector(\"input\");\r\n                this.checkboxs[`${value}`] = checkbox;\r\n            }\r\n        });\r\n        let self = this;\r\n        return {\r\n            element,\r\n            get value() {\r\n                let checkboxs = [];\r\n                for (let c in self.checkboxs) {\r\n                    if (self.checkboxs[c].checked) {\r\n                        checkboxs.push(self.checkboxs[c]);\r\n                    }\r\n                }\r\n                let value = checkboxs.map(o => o.value);\r\n                return value;\r\n            },\r\n            set value(value) {\r\n                let checkbox = self.checkboxs[`${value}`];\r\n                if (checkbox) {\r\n                    checkbox.checked = true;\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n"],"file":"checkbox-list.field.js"}