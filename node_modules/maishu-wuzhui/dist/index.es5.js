/*!
 * 
 *  maishu-wuzhui v1.17.74
 *  https://github.com/ansiboy/wuzhui
 *  
 *  Copyright (c) 2016-2018, shu mai <ansiboy@163.com>
 *  Licensed under the MIT License.
 * 
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("maishu-toolkit"));
	else if(typeof define === 'function' && define.amd)
		define(["maishu-toolkit"], factory);
	else if(typeof exports === 'object')
		exports["wuzhui"] = factory(require("maishu-toolkit"));
	else
		root["wuzhui"] = factory(root["maishu-toolkit"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_maishu_toolkit__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./out-es5/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./out-es5/Control.js":
/*!****************************!*\
  !*** ./out-es5/Control.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Errors_1 = __webpack_require__(/*! ./Errors */ "./out-es5/Errors.js");

var Utility_1 = __webpack_require__(/*! ./Utility */ "./out-es5/Utility.js"); // namespace wuzhui {


var CONTROL_DATA_NAME = 'Control';

var Control = /*#__PURE__*/function () {
  function Control(element) {
    _classCallCheck(this, Control);

    if (!element) throw Errors_1.Errors.argumentNull('element');
    this._element = element;
    Utility_1.ElementHelper.data(element, CONTROL_DATA_NAME, this);
  }

  _createClass(Control, [{
    key: "appendChild",
    value: function appendChild(child, index) {
      if (child == null) throw Errors_1.Errors.argumentNull('child');
      var childElement;

      if (child.tagName != null) {
        childElement = child;
      } else {
        childElement = child.element;
      }

      var placeChild;

      if (index != null) {
        placeChild = this.element.children[index];
      }

      if (placeChild == null) {
        this.element.appendChild(childElement);
      } else {
        this.element.insertBefore(childElement, placeChild);
      }
    }
  }, {
    key: "style",
    value: function style(value) {
      Utility_1.applyStyle(this.element, value);
    }
  }, {
    key: "visible",
    get: function get() {
      return Utility_1.ElementHelper.isVisible(this._element);
    },
    set: function set(value) {
      if (value) {
        Utility_1.ElementHelper.showElement(this._element);
      } else {
        Utility_1.ElementHelper.hideElement(this._element);
      }
    }
  }, {
    key: "element",
    get: function get() {
      return this._element;
    }
  }], [{
    key: "getControlByElement",
    value: function getControlByElement(element) {
      return Utility_1.ElementHelper.data(element, CONTROL_DATA_NAME);
    }
  }]);

  return Control;
}();

exports.Control = Control; // }
//# sourceMappingURL=Control.js.map


/***/ }),

/***/ "./out-es5/DropDown.js":
/*!*****************************!*\
  !*** ./out-es5/DropDown.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __classPrivateFieldSet = void 0 && (void 0).__classPrivateFieldSet || function (receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }

  privateMap.set(receiver, value);
  return value;
};

var __classPrivateFieldGet = void 0 && (void 0).__classPrivateFieldGet || function (receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }

  return privateMap.get(receiver);
};

var _dataSource, _options, _nameField, _valueField;

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Control_1 = __webpack_require__(/*! ./Control */ "./out-es5/Control.js");

var Errors_1 = __webpack_require__(/*! ./Errors */ "./out-es5/Errors.js");

var Dropdown = /*#__PURE__*/function (_Control_1$Control) {
  _inherits(Dropdown, _Control_1$Control);

  var _super = _createSuper(Dropdown);

  function Dropdown(params) {
    var _this;

    _classCallCheck(this, Dropdown);

    _this = _super.call(this, params.element);

    _dataSource.set(_assertThisInitialized(_this), void 0);

    _options.set(_assertThisInitialized(_this), {});

    _nameField.set(_assertThisInitialized(_this), void 0);

    _valueField.set(_assertThisInitialized(_this), void 0);

    if (params == null) throw Errors_1.Errors.argumentNull('params');
    if (params.dataSource == null) throw Errors_1.Errors.argumentFieldNull('params', 'dataSource');
    if (params.element == null) throw Errors_1.Errors.argumentFieldNull('params', 'element');
    if (params.nameField == null) throw Errors_1.Errors.argumentFieldNull("params", "nameField");
    if (params.valueField == null) throw Errors_1.Errors.argumentFieldNull("params", "valueField");

    __classPrivateFieldSet(_assertThisInitialized(_this), _nameField, params.nameField);

    __classPrivateFieldSet(_assertThisInitialized(_this), _valueField, params.valueField);

    _this.init(params);

    return _this;
  }

  _createClass(Dropdown, [{
    key: "init",
    value: function init(params) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var _this2 = this;

        var r;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                __classPrivateFieldSet(this, _dataSource, params.dataSource);

                _context.next = 3;
                return params.dataSource.select({});

              case 3:
                r = _context.sent;
                r.dataItems.forEach(function (dataItem) {
                  _this2.addOptionElement(dataItem);
                });

                __classPrivateFieldGet(this, _dataSource).inserted.add(function (args) {
                  _this2.addOptionElement(args.dataItem);
                });

                __classPrivateFieldGet(this, _dataSource).deleted.add(function (args) {
                  var pk = _this2.primaryKeyValue(args.dataItem);

                  var option = __classPrivateFieldGet(_this2, _options)[pk];

                  if (option) {
                    _this2.element.removeChild(option);
                  }
                });

                __classPrivateFieldGet(this, _dataSource).updated.add(function (args) {
                  var pk = _this2.primaryKeyValue(args.dataItem);

                  var option = __classPrivateFieldGet(_this2, _options)[pk];

                  if (option && args.dataItem[__classPrivateFieldGet(_this2, _nameField)] != null) {
                    option.innerHTML = args.dataItem[__classPrivateFieldGet(_this2, _nameField)];
                  }
                });

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "addOptionElement",
    value: function addOptionElement(dataItem) {
      console.assert(__classPrivateFieldGet(this, _nameField) != null);
      console.assert(__classPrivateFieldGet(this, _valueField) != null);

      var name = dataItem[__classPrivateFieldGet(this, _nameField)];

      var value = dataItem[__classPrivateFieldGet(this, _valueField)];

      var option = document.createElement('option');
      option.innerHTML = name || "";
      option.value = value || "";
      this.element.appendChild(option);
      var pk = this.primaryKeyValue(dataItem);
      __classPrivateFieldGet(this, _options)[pk] = option;
      return option;
    }
  }, {
    key: "primaryKeyValue",
    value: function primaryKeyValue(dataItem) {
      var r = __classPrivateFieldGet(this, _dataSource).primaryKeys.map(function (pk) {
        return dataItem[pk];
      }).join("-");

      return r;
    }
  }, {
    key: "dataSource",
    get: function get() {
      return __classPrivateFieldGet(this, _dataSource);
    }
  }]);

  return Dropdown;
}(Control_1.Control);

exports.Dropdown = Dropdown;
_dataSource = new WeakMap(), _options = new WeakMap(), _nameField = new WeakMap(), _valueField = new WeakMap();
//# sourceMappingURL=DropDown.js.map


/***/ }),

/***/ "./out-es5/ElementProvider.js":
/*!************************************!*\
  !*** ./out-es5/ElementProvider.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultElementProvider = {
  createRowElement: function createRowElement() {
    return document.createElement("tr");
  },
  createCellElement: function createCellElement() {
    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "body";
    return type == "header" ? document.createElement("th") : document.createElement('td');
  },
  // createViewElement: () => document.createElement("table"),
  createHeaderElement: function createHeaderElement() {
    return document.createElement("thead");
  },
  createFooterElement: function createFooterElement() {
    return document.createElement("tfoot");
  },
  createBodyElement: function createBodyElement() {
    return document.createElement("tbody");
  }
};
//# sourceMappingURL=ElementProvider.js.map


/***/ }),

/***/ "./out-es5/Errors.js":
/*!***************************!*\
  !*** ./out-es5/Errors.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // namespace wuzhui {
// export class Errors {
//     static notImplemented(message?: string) {
//         message = message || "Not implemented";
//         return new Error(message);
//     }
//     static argumentNull(paramName) {
//         return new Error("Argument '" + paramName + "' can not be null.");
//     }
//     static controllBelonsAnother() {
//         return new Error("The control is belongs another control.");
//     }
//     static columnsCanntEmpty() {
//         return new Error("Columns cannt empty.");
//     }
//     static dataSourceCanntInsert() {
//         return new Error("DataSource can not insert.");
//     }
//     static dataSourceCanntUpdate() {
//         return new Error("DataSource can not update.");
//     }
//     static dataSourceCanntDelete() {
//         return new Error("DataSource can not delete.");
//     }
//     static primaryKeyNull(key: string) {
//         let msg = `Primary key named '${key}' value is null.`;
//         return new Error(msg);
//     }
//     static queryResultTypeError() {
//         let msg = 'Type of the query result is expected as Array or DataSourceSelectResult.';
//         return new Error(msg);
//     }
//     static argumentFieldNull(argumentName: string, fieldName: string) {
//         let msg = `Argument ${argumentName} ${fieldName} field can not be null or empty.`
//         return new Error(msg);
//     }
// }
// }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var maishu_toolkit_1 = __webpack_require__(/*! maishu-toolkit */ "maishu-toolkit");

exports.Errors = Object.assign(maishu_toolkit_1.errors, {
  columnsCanntEmpty: function columnsCanntEmpty() {
    return new Error("Columns cannt empty.");
  },
  notImplemented: function notImplemented(message) {
    message = message || "Not implemented";
    return new Error(message);
  },
  gridViewNull: function gridViewNull() {
    var msg = "Grid view is null.";
    return new Error(msg);
  }
});
//# sourceMappingURL=Errors.js.map


/***/ }),

/***/ "./out-es5/GridView.js":
/*!*****************************!*\
  !*** ./out-es5/GridView.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Control_1 = __webpack_require__(/*! ./Control */ "./out-es5/Control.js");

var maishu_toolkit_1 = __webpack_require__(/*! maishu-toolkit */ "maishu-toolkit");

var NumberPagingBar_1 = __webpack_require__(/*! ./NumberPagingBar */ "./out-es5/NumberPagingBar.js");

var Utility_1 = __webpack_require__(/*! ./Utility */ "./out-es5/Utility.js");

var Errors_1 = __webpack_require__(/*! ./Errors */ "./out-es5/Errors.js");

var index_1 = __webpack_require__(/*! ./cells/index */ "./out-es5/cells/index.js");

var index_2 = __webpack_require__(/*! ./rows/index */ "./out-es5/rows/index.js");

var ElementProvider_1 = __webpack_require__(/*! ./ElementProvider */ "./out-es5/ElementProvider.js");

var maishu_toolkit_2 = __webpack_require__(/*! maishu-toolkit */ "maishu-toolkit");

var GridView = /*#__PURE__*/function (_Control_1$Control) {
  _inherits(GridView, _Control_1$Control);

  var _super = _createSuper(GridView);

  function GridView(params) {
    var _this;

    var elementProvider = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ElementProvider_1.defaultElementProvider;

    _classCallCheck(this, GridView);

    _this = _super.call(this, params.element);
    _this.emptyDataHTML = '暂无记录';
    _this.initDataHTML = '数据正在加载中...';
    _this.loadFailHTML = '加载数据失败，点击重新加载。'; //========================================================
    // 样式
    // headerStyle: string;
    // footerStyle: string;
    // rowStyle: string;
    // alternatingRowStyle: string;
    //private emptyDataRowStyle: string;
    //========================================================

    _this.rowCreated = new maishu_toolkit_1.Callback(); //callbacks<GridView<T>, { row: GridViewRow }>();

    _this.elementProvider = elementProvider;
    params = Object.assign({
      showHeader: true,
      showFooter: false,
      showPagingBar: true
    }, params);
    _this.selectArguments = new maishu_toolkit_1.DataSourceSelectArguments();
    if (params.pageSize) _this.selectArguments.maximumRows = params.pageSize;
    _this._params = params;
    _this._columns = params.columns || [];
    if (_this._columns.length == 0) throw Errors_1.Errors.columnsCanntEmpty();

    for (var i = 0; i < _this._columns.length; i++) {
      var column = _this._columns[i];
      column.gridView = _assertThisInitialized(_this);
    }

    _this._dataSource = params.dataSource;

    _this._dataSource.selected.add(function (args) {
      return _this.on_selectedExecuted(args.selectResult);
    });

    _this._dataSource.updated.add(function (args) {
      return _this.on_updateExecuted(args.dataItem);
    });

    _this._dataSource.inserted.add(function (args) {
      return _this.on_insertExecuted(args.dataItem, args.index);
    });

    _this._dataSource.deleted.add(function (args) {
      return _this.on_deleteExecuted(args.dataItem);
    });

    _this._dataSource.selecting.add(function (args) {
      var display = _this._emtpyRow.element.style.display;

      if (display != 'none') {
        _this._emtpyRow.element.children[0].innerHTML = _this.initDataHTML;
      }
    });

    _this._dataSource.error.add(function (args) {
      if (args.error.method == 'select') {
        _this.renderDataItems([]);

        var element = _this._emtpyRow.cells[0].element;
        element.innerHTML = _this.loadFailHTML;

        element.onclick = function () {
          _this._dataSource.select(_this.selectArguments);
        };

        args.error.handled = true;
        console.error(args.error.message);
        console.log(args.error.stack);
      }
    });

    if (params.showHeader) {
      _this._header = new Control_1.Control(_this.elementProvider.createHeaderElement());

      _this.appendChild(_this._header);

      _this.appendHeaderRow();
    }

    _this.emptyDataHTML = params.emptyDataHTML || _this.emptyDataHTML;
    _this.initDataHTML = params.initDataHTML || _this.initDataHTML;
    _this._body = new Control_1.Control(_this.elementProvider.createBodyElement());

    _this.appendChild(_this._body);

    _this.appendEmptyRow();

    var showPagingBar = params.showPagingBar;

    if (params.showFooter || showPagingBar) {
      _this._footer = new Control_1.Control(_this.elementProvider.createFooterElement());

      _this.appendChild(_this._footer);

      if (params.showFooter) _this.appendFooterRow();

      if (showPagingBar) {
        _this.createPagingBar(params.pagerSettings); // this.pagingBar.selectArguments.maximumRows = params.pageSize;

      }
    } // this.selectArguments = this.pagingBar ? this.pagingBar.selectArguments : new DataSourceSelectArguments();
    // if (params.pageSize)
    //     this.selectArguments.maximumRows = params.pageSize;


    _this.dataSource.select(_this.selectArguments);

    return _this;
  }

  _createClass(GridView, [{
    key: "createPagingBar",
    value: function createPagingBar(pagerSettings) {
      var pagingBarContainer = this.elementProvider.createRowElement(); //document.createElement('tr');

      var pagingBarElement = this.elementProvider.createCellElement("footer"); //document.createElement('td');
      // pagingBarElement.className = GridView.pagingBarClassName;

      maishu_toolkit_2.HTML.addClassName(pagingBarElement, GridView.pagingBarClassName);
      if (pagingBarElement.tagName == "TD") pagingBarElement.setAttribute("colspan", "".concat(this.columns.length)); // pagingBarElement.colSpan = this.columns.length;

      pagingBarContainer.appendChild(pagingBarElement);
      console.assert(this._footer != null);

      this._footer.appendChild(pagingBarContainer);

      this.pagingBar = new NumberPagingBar_1.DataSourcePagingBar({
        dataSource: this.dataSource,
        element: pagingBarElement,
        pagerSettings: pagerSettings
      });
    }
  }, {
    key: "appendEmptyRow",
    value: function appendEmptyRow() {
      this._emtpyRow = new index_2.GridViewRow(index_2.GridViewRowType.Empty, this.elementProvider.createRowElement(), this);
      this._emtpyRow.element.className = GridView.emptyRowClassName;
      var cell = new index_1.GridViewCell(this.elementProvider.createCellElement("body"));
      cell.element.setAttribute("colspan", this.columns.length.toString());

      if (this._params.emptyDataRowStyle) {
        Utility_1.applyStyle(cell.element, this._params.emptyDataRowStyle);
      }

      this._emtpyRow.appendChild(cell);

      this._body.appendChild(this._emtpyRow);

      this.rowCreated.fire({
        row: this._emtpyRow
      });
    }
  }, {
    key: "appendDataRow",
    value: function appendDataRow(dataItem, index) {
      var row = new index_2.GridViewDataRow(this, dataItem, this.elementProvider.createRowElement());
      maishu_toolkit_2.HTML.addClassName(row.element, GridView.dataRowClassName);

      this._body.appendChild(row, index);

      var cells = row.cells;

      for (var j = 0; j < cells.length; j++) {
        var cell = cells[j];

        if (cell.render != null) {
          cell.render(dataItem);
        }
      }

      this.rowCreated.fire({
        row: row
      });
      if (this._emtpyRow.element.style.display != 'none') this.hideEmptyRow();
      return row;
    }
  }, {
    key: "on_sort",
    value: function on_sort(sender, args) {
      if (this._currentSortCell != null && this._currentSortCell != sender) {
        this._currentSortCell.clearSortIcon();
      }

      this._currentSortCell = sender;
    }
  }, {
    key: "appendHeaderRow",
    value: function appendHeaderRow() {
      var _this2 = this;

      var row = new index_2.GridViewRow(index_2.GridViewRowType.Header, this.elementProvider.createRowElement(), this);

      var _loop = function _loop() {
        column = _this2.columns[i];
        var cell = column.createHeaderCell(_this2.elementProvider.createCellElement("header"));

        if (cell.type == "GridViewHeaderCell") {
          cell.sorting.add(function (a) {
            return _this2.on_sort(cell, a);
          });
        }

        row.appendChild(cell);
        cell.visible = _this2.columns[i].visible;
      };

      for (var i = 0; i < this.columns.length; i++) {
        var column;

        _loop();
      }

      this._header.appendChild(row);
    }
  }, {
    key: "appendFooterRow",
    value: function appendFooterRow() {
      var row = new index_2.GridViewRow(index_2.GridViewRowType.Footer, this.elementProvider.createRowElement(), this);

      for (var i = 0; i < this.columns.length; i++) {
        var column = this.columns[i];
        var cell = column.createFooterCell(this.elementProvider.createCellElement("footer"));
        row.appendChild(cell);
        cell.visible = column.visible;
      }

      this._footer.appendChild(row);
    }
  }, {
    key: "renderDataItems",
    value: function renderDataItems(items) {
      var rows = this._body.element.querySelectorAll(".".concat(GridView.dataRowClassName));

      for (var i = 0; i < rows.length; i++) {
        this._body.element.removeChild(rows[i]);
      }

      if (items.length == 0) {
        this.showEmptyRow();
        return;
      }

      for (var _i = 0; _i < items.length; _i++) {
        this.appendDataRow(items[_i]);
      }
    }
  }, {
    key: "on_selectedExecuted",
    value: function on_selectedExecuted(e) {
      var dataItems = e.dataItems;

      if (this._params.translate) {
        dataItems = this._params.translate(dataItems);
      }

      this.renderDataItems(dataItems);
    }
  }, {
    key: "on_updateExecuted",
    value: function on_updateExecuted(item) {
      console.assert(item != null);
      var dataItems = [];

      for (var i = 0; i < this._body.element.children.length; i++) {
        var row_element = this._body.element.children[i];
        var row = Control_1.Control.getControlByElement(row_element);
        ;
        if (row.rowType != index_2.GridViewRowType.Data) continue;
        var dataItem = row.dataItem;
        dataItems.push(dataItem);
        if (!this.dataSource.isSameItem(dataItem, item)) continue;

        if (dataItem != item) {
          Object.assign(dataItem, item);
        }

        var cells = row.cells;

        for (var j = 0; j < cells.length; j++) {
          var cell = cells[j];

          if (cell.type == "GridViewDataCell") {
            cell.render(dataItem);
          } else if (cell.type == "GridViewEditableCell") {
            cell.render(dataItem);
          }
        }
      }

      if (this._params.translate) {
        dataItems = this._params.translate(dataItems);
        this.renderDataItems(dataItems);
      }
    }
  }, {
    key: "on_insertExecuted",
    value: function on_insertExecuted(item, index) {
      if (index == null) index = 0;

      if (!this._params.translate) {
        this.appendDataRow(item, index);
        return;
      }

      var dataItems = [item];

      for (var i = 0; i < this._body.element.children.length; i++) {
        var row_element = this._body.element.children[i];
        var row = Control_1.Control.getControlByElement(row_element);
        ;
        if (row.rowType != index_2.GridViewRowType.Data) continue;
        var dataItem = row.dataItem;
        dataItems.push(dataItem);
      }

      dataItems = this._params.translate(dataItems);
      this.renderDataItems(dataItems);
    }
  }, {
    key: "on_deleteExecuted",
    value: function on_deleteExecuted(item) {
      var _this3 = this;

      var rows = this._body.element.children;
      var dataRows = new Array();

      for (var i = 0; i < rows.length; i++) {
        var row = Control_1.Control.getControlByElement(rows[i]);
        if (row.rowType == index_2.GridViewRowType.Data) dataRows.push(row);
      }

      if (this._params.translate) {
        var dataItems = dataRows.map(function (o) {
          return o.dataItem;
        }).filter(function (o) {
          return !_this3.dataSource.isSameItem(o, item);
        });
        dataItems = this._params.translate(dataItems);
        this.renderDataItems(dataItems);
        return;
      }

      for (var _i2 = 0; _i2 < dataRows.length; _i2++) {
        var dataRow = dataRows[_i2];
        if (!this.dataSource.isSameItem(item, dataRow.dataItem)) continue;
        dataRow.element.remove();
        if (dataRows.length == 1) this.showEmptyRow();
      }
    }
  }, {
    key: "showEmptyRow",
    value: function showEmptyRow() {
      this._emtpyRow.element.children[0].innerHTML = this.emptyDataHTML;

      this._emtpyRow.element.style.removeProperty('display');
    }
  }, {
    key: "hideEmptyRow",
    value: function hideEmptyRow() {
      this._emtpyRow.element.style.display = 'none';
    }
  }, {
    key: "columns",
    get: function get() {
      return this._columns;
    }
  }, {
    key: "dataSource",
    get: function get() {
      return this._dataSource;
    }
  }]);

  return GridView;
}(Control_1.Control);

exports.GridView = GridView;
GridView.emptyRowClassName = 'empty';
GridView.dataRowClassName = 'data';
GridView.pagingBarClassName = 'pagingBar'; // }
//# sourceMappingURL=GridView.js.map


/***/ }),

/***/ "./out-es5/NumberPagingBar.js":
/*!************************************!*\
  !*** ./out-es5/NumberPagingBar.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Errors_1 = __webpack_require__(/*! ./Errors */ "./out-es5/Errors.js"); // namespace wuzhui {


var PagerPosition;

(function (PagerPosition) {
  PagerPosition[PagerPosition["Bottom"] = 0] = "Bottom";
  PagerPosition[PagerPosition["Top"] = 1] = "Top";
  PagerPosition[PagerPosition["TopAndBottom"] = 2] = "TopAndBottom";
})(PagerPosition = exports.PagerPosition || (exports.PagerPosition = {}));

;

var PagingBar = /*#__PURE__*/function () {
  function PagingBar() {
    _classCallCheck(this, PagingBar);
  }

  _createClass(PagingBar, [{
    key: "init",
    value: function init(dataSource) {
      var _this = this;

      this._pageIndex = 0;
      var pagingBar = this;
      pagingBar.totalRowCount = 1000000;

      if (dataSource) {
        dataSource.selected.add(function (args) {
          _this._selectArguments = args.selectArguments;
          pagingBar.pageSize = args.selectArguments.maximumRows;
          var totalRowCount = args.selectResult.totalRowCount;

          if (totalRowCount != null && totalRowCount >= 0) {
            pagingBar.totalRowCount = totalRowCount;
          }

          var startRowIndex = _this._selectArguments.startRowIndex;
          if (startRowIndex == null || startRowIndex <= 0) startRowIndex = 0;
          pagingBar.pageIndex = Math.floor(startRowIndex / pagingBar.pageSize);
          pagingBar.render();
        });
        dataSource.deleted.add(function () {
          pagingBar.totalRowCount = pagingBar.totalRowCount - 1;
          pagingBar.render();
        });
        dataSource.inserted.add(function () {
          pagingBar.totalRowCount = pagingBar.totalRowCount + 1;
          pagingBar.render();
        });
      }
    }
  }, {
    key: "render",
    // Virtual Method
    value: function render() {
      throw Errors_1.Errors.notImplemented('The table-row render method is not implemented.');
    }
  }, {
    key: "selectArguments",
    get: function get() {
      console.assert(this._selectArguments != null);
      return this._selectArguments;
    }
  }, {
    key: "pageCount",
    get: function get() {
      var pageCount = Math.ceil(this.totalRowCount / this.pageSize);
      return pageCount;
    }
  }, {
    key: "pageSize",
    get: function get() {
      return this._pageSize;
    },
    set: function set(value) {
      this._pageSize = value;
    }
  }, {
    key: "pageIndex",
    get: function get() {
      return this._pageIndex;
    },
    set: function set(value) {
      this._pageIndex = value;
    }
  }, {
    key: "totalRowCount",
    get: function get() {
      return this._totalRowCount;
    },
    set: function set(value) {
      this._totalRowCount = value;
    }
  }]);

  return PagingBar;
}();

exports.PagingBar = PagingBar;

var DataSourcePagingBar = /*#__PURE__*/function (_PagingBar) {
  _inherits(DataSourcePagingBar, _PagingBar);

  var _super = _createSuper(DataSourcePagingBar);

  function DataSourcePagingBar(params) {
    var _this2;

    _classCallCheck(this, DataSourcePagingBar);

    if (!params.dataSource) throw Errors_1.Errors.argumentNull('dataSource');
    if (!params.element) throw Errors_1.Errors.argumentNull('element');
    var pagerSettings = Object.assign(DataSourcePagingBar.defaultPagerSettings, params.pagerSettings || {});
    _this2 = _super.call(this);
    _this2.dataSource = params.dataSource;
    _this2.pagerSettings = pagerSettings;
    _this2.element = params.element;
    _this2.numberButtons = new Array();
    _this2.createButton = _this2.createPagingButton;
    _this2.createLabel = _this2.createTotalLabel;
    var buttonContainer = pagerSettings.buttonContainerWraper ? document.createElement(pagerSettings.buttonContainerWraper) : document.createElement('div');
    buttonContainer.className = pagerSettings.buttonContainerClassName || "buttons";

    _this2.element.appendChild(buttonContainer);

    _this2.createPreviousButtons(buttonContainer);

    _this2.createNumberButtons(buttonContainer);

    _this2.createNextButtons(buttonContainer);

    if (_this2.pagerSettings.showTotal) {
      _this2.totalElement = _this2.createLabel();
      _this2.totalElement.visible = false;
    }

    _this2.init(params.dataSource);

    return _this2;
  }

  _createClass(DataSourcePagingBar, [{
    key: "createPagingButton",
    value: function createPagingButton(container) {
      var _this3 = this;

      var pagerSettings = this.pagerSettings;
      var button = document.createElement('a');
      button.href = 'javascript:';

      if (this.pagerSettings.buttonWrapper) {
        var w = document.createElement(this.pagerSettings.buttonWrapper);
        w.appendChild(button);
        container.appendChild(w);
      } else {
        container.appendChild(button);
      }

      var result = {
        _button: button,

        get visible() {
          var button = this._button;
          return button.style.display != 'none';
        },

        set visible(value) {
          var button = this._button;
          var element = pagerSettings.buttonWrapper ? button.parentElement : button;

          if (value) {
            element.style.removeProperty('display');
          } else {
            element.style.display = 'none';
          }
        },

        get pageIndex() {
          var button = this._button;
          return new Number(button.getAttribute('pageIndex')).valueOf();
        },

        set pageIndex(value) {
          var button = this._button;
          button.setAttribute('pageIndex', value);
        },

        get text() {
          var button = this._button;
          return button.innerHTML;
        },

        set text(value) {
          var button = this._button;
          button.innerHTML = value;
        },

        get active() {
          var button = this._button;
          return button.href != null;
        },

        set active(value) {
          var button = this._button;

          if (value == true) {
            button.removeAttribute('href');

            if (pagerSettings.activeButtonClassName) {
              // button.className = pagerSettings.activeButtonClassName;
              this.setClassName(pagerSettings.activeButtonClassName);
            }

            return;
          }

          button.href = 'javascript:';
          if (pagerSettings.buttonClassName) this.setClassName(pagerSettings.buttonClassName);else this.setClassName(null);
        },

        setClassName: function setClassName(value) {
          var button = this._button;
          var element = pagerSettings.buttonWrapper ? button.parentElement : button;
          if (value) element.className = value;else element.removeAttribute('class');
        },
        onclick: null
      };

      button.onclick = function () {
        if (result.onclick) {
          result.onclick(result, _this3);
        }
      };

      return result;
    }
  }, {
    key: "createTotalLabel",
    value: function createTotalLabel() {
      var totalElement = document.createElement('div');
      totalElement.className = 'total';
      var textElement = document.createElement('span');
      textElement.className = 'text';
      textElement.innerHTML = '总记录：';
      totalElement.appendChild(textElement);
      var numberElement = document.createElement('span');
      numberElement.className = 'number';
      totalElement.appendChild(numberElement);
      this.element.appendChild(totalElement);
      return {
        get text() {
          return numberElement.innerHTML;
        },

        set text(value) {
          numberElement.innerHTML = value;
        },

        get visible() {
          var display = totalElement.style.display;
          return display != 'none';
        },

        set visible(value) {
          if (value == true) totalElement.style.display = 'block';else totalElement.style.display = 'node';
        }

      };
    }
  }, {
    key: "createPreviousButtons",
    value: function createPreviousButtons(buttonContainer) {
      this.firstPageButton = this.createButton(buttonContainer);
      this.firstPageButton.onclick = DataSourcePagingBar.on_buttonClick;
      this.firstPageButton.text = this.pagerSettings.firstPageText;
      this.firstPageButton.visible = false;
      this.previousPageButton = this.createButton(buttonContainer);
      this.previousPageButton.onclick = DataSourcePagingBar.on_buttonClick;
      this.previousPageButton.text = this.pagerSettings.previousPageText;
      this.previousPageButton.visible = false;
    }
  }, {
    key: "createNextButtons",
    value: function createNextButtons(buttonContainer) {
      this.nextPageButton = this.createButton(buttonContainer);
      this.nextPageButton.onclick = DataSourcePagingBar.on_buttonClick;
      this.nextPageButton.text = this.pagerSettings.nextPageText;
      this.nextPageButton.visible = false;
      this.lastPageButton = this.createButton(buttonContainer);
      this.lastPageButton.onclick = DataSourcePagingBar.on_buttonClick;
      this.lastPageButton.text = this.pagerSettings.lastPageText;
      this.lastPageButton.visible = false;
    }
  }, {
    key: "createNumberButtons",
    value: function createNumberButtons(buttonContainer) {
      var pagingBar = this;
      var buttonCount = this.pagerSettings.pageButtonCount;

      for (var i = 0; i < buttonCount; i++) {
        var button = this.createButton(buttonContainer);
        button.onclick = DataSourcePagingBar.on_buttonClick;
        this.numberButtons[i] = button;
      }

      this.numberButtons.forEach(function (btn) {
        btn.onclick = function () {
          return DataSourcePagingBar.on_buttonClick(btn, pagingBar);
        };
      });
    }
  }, {
    key: "render",
    value: function render() {
      var pagerSettings = this.pagerSettings;
      var buttonCount = pagerSettings.pageButtonCount;
      var pagingBarIndex = Math.floor(this.pageIndex / buttonCount);
      var pagingBarCount = Math.ceil(this.pageCount / buttonCount);
      this.previousPageButton.pageIndex = (pagingBarIndex - 1) * buttonCount;
      this.nextPageButton.pageIndex = (pagingBarIndex + 1) * buttonCount;
      this.firstPageButton.pageIndex = 0;
      this.lastPageButton.pageIndex = this.pageCount - 1;

      for (var i = 0; i < this.numberButtons.length; i++) {
        var pageIndex = pagingBarIndex * buttonCount + i;

        if (pageIndex < this.pageCount) {
          this.numberButtons[i].pageIndex = pageIndex;
          this.numberButtons[i].text = (pagingBarIndex * buttonCount + i + 1).toString();
          this.numberButtons[i].visible = true;
          this.numberButtons[i].active = pageIndex == this.pageIndex;
        } else {
          this.numberButtons[i].visible = false;
        }
      }

      if (this.totalElement) {
        this.totalElement.text = this.totalRowCount;
        this.totalElement.visible = true;
      }

      this.firstPageButton.visible = false;
      this.previousPageButton.visible = false;
      this.lastPageButton.visible = false;
      this.nextPageButton.visible = false;

      if (pagingBarIndex > 0) {
        this.firstPageButton.visible = true;
        this.previousPageButton.visible = true;
      }

      if (pagingBarIndex < pagingBarCount - 1) {
        this.lastPageButton.visible = true;
        this.nextPageButton.visible = true;
      }
    }
  }], [{
    key: "on_buttonClick",
    value: function on_buttonClick(button, pagingBar) {
      var pageIndex = button.pageIndex;

      if (!pageIndex == null) {
        return;
      }

      var args = pagingBar.selectArguments;
      args.maximumRows = pagingBar.pageSize;
      args.startRowIndex = pageIndex * pagingBar.pageSize;
      pagingBar.pageIndex = pageIndex;
      pagingBar.dataSource.select(pagingBar.selectArguments);
    }
  }]);

  return DataSourcePagingBar;
}(PagingBar);

exports.DataSourcePagingBar = DataSourcePagingBar;
DataSourcePagingBar.defaultPagerSettings = {
  pageButtonCount: 10,
  firstPageText: '<<',
  lastPageText: '>>',
  nextPageText: '...',
  previousPageText: '...',
  showTotal: true
}; // export class NumberPagingBar extends PagingBar {
//     // private dataSource: DataSource<{}>;
//     private pagerSettings: PagerSettings;
//     private element: HTMLElement;
//     private totalElement: PagingTotalLabel;
//     private numberButtons: Array<NumberPagingButton<NumberPagingBar>>;
//     private firstPageButton: NumberPagingButton<NumberPagingBar>;
//     private previousPageButton: NumberPagingButton<NumberPagingBar>;
//     private nextPageButton: NumberPagingButton<NumberPagingBar>;
//     private lastPageButton: NumberPagingButton<NumberPagingBar>;
//     private createLabel: () => PagingTotalLabel;
//     private createButton: (container: HTMLElement) => NumberPagingButton<NumberPagingBar>;
//     private loadData: (pageIndex: number) => void;
//     constructor(params: {
//         loadData: (pageIndex: number) => void, element: HTMLElement, pagerSettings?: PagerSettings,
//         selectArguments?: DataSourceSelectArguments
//     }) {
//         if (!params.loadData) throw Errors.argumentNull('loadData');
//         if (!params.element) throw Errors.argumentNull('element');
//         let pagerSettings = Object.assign(<PagerSettings>{
//             pageButtonCount: 10,
//             firstPageText: '<<',
//             lastPageText: '>>',
//             nextPageText: '...',
//             previousPageText: '...',
//             showTotal: true,
//         }, params.pagerSettings || {});
//         super();
//         this.loadData = params.loadData;
//         this.pagerSettings = pagerSettings;
//         this.element = params.element;
//         this.numberButtons = new Array<NumberPagingButton<NumberPagingBar>>();
//         this.createButton = this.createPagingButton;
//         this.createLabel = this.createTotalLabel;
//         let buttonContainer = pagerSettings.buttonContainerWraper ?
//             document.createElement(pagerSettings.buttonContainerWraper) :
//             document.createElement('div');
//         buttonContainer.className = pagerSettings.buttonContainerClassName || "buttons";
//         this.element.appendChild(buttonContainer);
//         this.createPreviousButtons(buttonContainer);
//         this.createNumberButtons(buttonContainer);
//         this.createNextButtons(buttonContainer);
//         if (this.pagerSettings.showTotal) {
//             this.totalElement = this.createLabel();
//             this.totalElement.visible = false;
//         }
//         this.init(null, params.selectArguments);
//     }
//     private createPagingButton(container: HTMLElement): NumberPagingButton<NumberPagingBar> {
//         var pagerSettings = this.pagerSettings;
//         let button = document.createElement('a');
//         button.href = 'javascript:';
//         if (this.pagerSettings.buttonWrapper) {
//             let w = document.createElement(this.pagerSettings.buttonWrapper);
//             w.appendChild(button);
//             container.appendChild(w);
//         }
//         else {
//             container.appendChild(button);
//         }
//         let result = {
//             _button: button,
//             get visible(): boolean {
//                 let button = this._button as HTMLAnchorElement;
//                 return button.style.display != 'none';
//             },
//             set visible(value: boolean) {
//                 let button = this._button as HTMLAnchorElement;
//                 let element = pagerSettings.buttonWrapper ? button.parentElement : button;
//                 if (value) {
//                     element.style.removeProperty('display');
//                 }
//                 else {
//                     element.style.display = 'none';
//                 }
//             },
//             get pageIndex(): number {
//                 let button = this._button as HTMLAnchorElement;
//                 return new Number(button.getAttribute('pageIndex')).valueOf();
//             },
//             set pageIndex(value: number) {
//                 let button = this._button as HTMLAnchorElement;
//                 button.setAttribute('pageIndex', value as any);
//             },
//             get text(): string {
//                 let button = this._button as HTMLAnchorElement;
//                 return button.innerHTML;
//             },
//             set text(value) {
//                 let button = this._button as HTMLAnchorElement;
//                 button.innerHTML = value;
//             },
//             get active(): boolean {
//                 let button = this._button as HTMLAnchorElement;
//                 return button.href != null;
//             },
//             set active(value: boolean) {
//                 let button = this._button as HTMLAnchorElement;
//                 if (value == true) {
//                     button.removeAttribute('href');
//                     if (pagerSettings.activeButtonClassName) {
//                         // button.className = pagerSettings.activeButtonClassName;
//                         this.setClassName(pagerSettings.activeButtonClassName)
//                     }
//                     return;
//                 }
//                 button.href = 'javascript:';
//                 if (pagerSettings.buttonClassName)
//                     this.setClassName(pagerSettings.buttonClassName);
//                 else
//                     this.setClassName(null);
//             },
//             setClassName(value: string) {
//                 let button = this._button as HTMLAnchorElement;
//                 let element = pagerSettings.buttonWrapper ? button.parentElement : button;
//                 if (value)
//                     element.className = value;
//                 else
//                     element.removeAttribute('class');
//             },
//             onclick: null as NumberPagingButtonClickEvent<NumberPagingBar> | null
//         };
//         button.onclick = () => {
//             if (result.onclick) {
//                 result.onclick(result, this);
//             }
//         };
//         return result;
//     }
//     private createTotalLabel() {
//         let totalElement = document.createElement('div');
//         totalElement.className = 'total';
//         let textElement = document.createElement('span');
//         textElement.className = 'text';
//         textElement.innerHTML = '总记录：';
//         totalElement.appendChild(textElement);
//         let numberElement = document.createElement('span');
//         numberElement.className = 'number';
//         totalElement.appendChild(numberElement);
//         this.element.appendChild(totalElement);
//         return <PagingTotalLabel>{
//             get text(): string {
//                 return numberElement.innerHTML;
//             },
//             set text(value: string) {
//                 numberElement.innerHTML = value;
//             },
//             get visible(): boolean {
//                 let display = totalElement.style.display;
//                 return display != 'none';
//             },
//             set visible(value: boolean) {
//                 if (value == true)
//                     totalElement.style.display = 'block';
//                 else
//                     totalElement.style.display = 'node';
//             }
//         }
//     }
//     private createPreviousButtons(buttonContainer: HTMLElement) {
//         this.firstPageButton = this.createButton(buttonContainer);
//         this.firstPageButton.onclick = NumberPagingBar.on_buttonClick;
//         this.firstPageButton.text = this.pagerSettings.firstPageText;
//         this.firstPageButton.visible = false;
//         this.previousPageButton = this.createButton(buttonContainer);
//         this.previousPageButton.onclick = NumberPagingBar.on_buttonClick;
//         this.previousPageButton.text = this.pagerSettings.previousPageText;
//         this.previousPageButton.visible = false;
//     }
//     private createNextButtons(buttonContainer: HTMLElement) {
//         this.nextPageButton = this.createButton(buttonContainer);
//         this.nextPageButton.onclick = NumberPagingBar.on_buttonClick;
//         this.nextPageButton.text = this.pagerSettings.nextPageText;
//         this.nextPageButton.visible = false;
//         this.lastPageButton = this.createButton(buttonContainer);
//         this.lastPageButton.onclick = NumberPagingBar.on_buttonClick;
//         this.lastPageButton.text = this.pagerSettings.lastPageText;
//         this.lastPageButton.visible = false;
//     }
//     private createNumberButtons(buttonContainer: HTMLElement) {
//         let pagingBar = this;
//         let buttonCount = this.pagerSettings.pageButtonCount;
//         for (let i = 0; i < buttonCount; i++) {
//             let button = this.createButton(buttonContainer);
//             button.onclick = NumberPagingBar.on_buttonClick;
//             this.numberButtons[i] = button;
//         }
//         this.numberButtons.forEach(btn => {
//             btn.onclick = () => NumberPagingBar.on_buttonClick(btn, pagingBar);
//         })
//     }
//     private static on_buttonClick(button: NumberPagingButton<NumberPagingBar>, pagingBar: NumberPagingBar) {
//         let pageIndex = button.pageIndex;
//         if (!pageIndex == null) {
//             return;
//         }
//         let args = pagingBar.selectArguments;
//         args.maximumRows = pagingBar.pageSize;
//         args.startRowIndex = pageIndex * pagingBar.pageSize;
//         pagingBar.pageIndex = pageIndex;
//         //pagingBar.dataSource.select(pagingBar.selectArguments);
//         pagingBar.loadData(pageIndex)
//     }
//     render() {
//         var pagerSettings = this.pagerSettings;
//         var buttonCount = pagerSettings.pageButtonCount;
//         let pagingBarIndex = Math.floor(this.pageIndex / buttonCount);
//         let pagingBarCount = Math.ceil(this.pageCount / buttonCount);
//         this.previousPageButton.pageIndex = (pagingBarIndex - 1) * buttonCount
//         this.nextPageButton.pageIndex = (pagingBarIndex + 1) * buttonCount;
//         this.firstPageButton.pageIndex = 0;
//         this.lastPageButton.pageIndex = this.pageCount - 1;
//         for (let i = 0; i < this.numberButtons.length; i++) {
//             let pageIndex = pagingBarIndex * buttonCount + i;
//             if (pageIndex < this.pageCount) {
//                 this.numberButtons[i].pageIndex = pageIndex;
//                 this.numberButtons[i].text = (pagingBarIndex * buttonCount + i + 1).toString();
//                 this.numberButtons[i].visible = true;
//                 this.numberButtons[i].active = pageIndex == this.pageIndex;
//             }
//             else {
//                 this.numberButtons[i].visible = false;
//             }
//         }
//         if (this.totalElement) {
//             this.totalElement.text = this.totalRowCount as any;
//             this.totalElement.visible = true;
//         }
//         this.firstPageButton.visible = false;
//         this.previousPageButton.visible = false;
//         this.lastPageButton.visible = false;
//         this.nextPageButton.visible = false;
//         if (pagingBarIndex > 0) {
//             this.firstPageButton.visible = true;
//             this.previousPageButton.visible = true;
//         }
//         if (pagingBarIndex < pagingBarCount - 1) {
//             this.lastPageButton.visible = true;
//             this.nextPageButton.visible = true;
//         }
//     }
// }
// }
//# sourceMappingURL=NumberPagingBar.js.map


/***/ }),

/***/ "./out-es5/TextBox.js":
/*!****************************!*\
  !*** ./out-es5/TextBox.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Control_1 = __webpack_require__(/*! ./Control */ "./out-es5/Control.js");

var Errors_1 = __webpack_require__(/*! ./Errors */ "./out-es5/Errors.js");

var TextBox = /*#__PURE__*/function (_Control_1$Control) {
  _inherits(TextBox, _Control_1$Control);

  var _super = _createSuper(TextBox);

  function TextBox(params) {
    var _this;

    _classCallCheck(this, TextBox);

    if (params == null) throw Errors_1.Errors.argumentNull("params");
    if (!params.element) throw Errors_1.Errors.argumentFieldNull("params", "element");
    if (!params.dataField) throw Errors_1.Errors.argumentFieldNull("params", "dataField");
    if (!params.dataItem) throw Errors_1.Errors.argumentFieldNull("params", "dataItem");
    if (!params.valueType) throw Errors_1.Errors.argumentFieldNull("params", "valuetype");
    _this = _super.call(this, params.element);
    var element = params.element,
        dataField = params.dataField,
        dataItem = params.dataItem,
        valueType = params.valueType;
    var value = dataItem[dataField];
    element.value = "".concat(value);

    element.onchange = function () {
      if (valueType == 'int') {
        dataItem[dataField] = Number.parseInt(element.value);
      } else if (valueType == 'float') {
        dataItem[dataField] = Number.parseFloat(element.value);
      } else {
        dataItem[dataField] = element.value || "";
      }
    };

    return _this;
  }

  return TextBox;
}(Control_1.Control);

exports.TextBox = TextBox;
//# sourceMappingURL=TextBox.js.map


/***/ }),

/***/ "./out-es5/Utility.js":
/*!****************************!*\
  !*** ./out-es5/Utility.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var maishu_toolkit_1 = __webpack_require__(/*! maishu-toolkit */ "maishu-toolkit");

var ElementHelper = /*#__PURE__*/function () {
  function ElementHelper() {
    _classCallCheck(this, ElementHelper);
  }

  _createClass(ElementHelper, null, [{
    key: "showElement",
    value: function showElement(element) {
      if (!element) throw maishu_toolkit_1.errors.argumentNull('element');
      element.style.removeProperty('display');
    }
  }, {
    key: "hideElement",
    value: function hideElement(element) {
      if (!element) throw maishu_toolkit_1.errors.argumentNull('element');
      element.style.display = 'none';
    }
  }, {
    key: "isVisible",
    value: function isVisible(element) {
      var display = element.style.display;
      return !display || display != 'none';
    }
  }, {
    key: "data",
    value: function data(e, name, value) {
      var element = e;
      element['data'] = element['data'] || {};
      if (value == null) return element['data'].name;
      element['data'].name = value;
    }
  }, {
    key: "findFirstParentByTagName",
    value: function findFirstParentByTagName(element, tagName) {
      if (element == null) throw maishu_toolkit_1.errors.argumentNull("element");
      if (!tagName) throw maishu_toolkit_1.errors.argumentNull('tagName');
      var parent = element.parentElement;

      while (parent != null) {
        if (parent.tagName.toLowerCase() == tagName.toLowerCase()) {
          return parent;
        }

        parent = parent.parentElement;
      }

      return null;
    }
  }]);

  return ElementHelper;
}();

exports.ElementHelper = ElementHelper;

function applyStyle(element, value) {
  if (typeof value == 'string') {
    element.setAttribute('style', value);
    return;
  }

  for (var key in value) {
    element.style[key] = value[key];
  }
}

exports.applyStyle = applyStyle;
//# sourceMappingURL=Utility.js.map


/***/ }),

/***/ "./out-es5/cells/GridViewCell.js":
/*!***************************************!*\
  !*** ./out-es5/cells/GridViewCell.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Control_1 = __webpack_require__(/*! ../Control */ "./out-es5/Control.js");

var GridViewCell = /*#__PURE__*/function (_Control_1$Control) {
  _inherits(GridViewCell, _Control_1$Control);

  var _super = _createSuper(GridViewCell);

  function GridViewCell(element) {
    var _this;

    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "GridViewCell";

    _classCallCheck(this, GridViewCell);

    _this = _super.call(this, element);
    _this.type = type;
    return _this;
  }

  return GridViewCell;
}(Control_1.Control);

exports.GridViewCell = GridViewCell;
//# sourceMappingURL=GridViewCell.js.map


/***/ }),

/***/ "./out-es5/cells/GridViewCommandCell.js":
/*!**********************************************!*\
  !*** ./out-es5/cells/GridViewCommandCell.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var GridViewCell_1 = __webpack_require__(/*! ./GridViewCell */ "./out-es5/cells/GridViewCell.js");

var GridViewCommandCell = /*#__PURE__*/function (_GridViewCell_1$GridV) {
  _inherits(GridViewCommandCell, _GridViewCell_1$GridV);

  var _super = _createSuper(GridViewCommandCell);

  function GridViewCommandCell(field, cellElement) {
    _classCallCheck(this, GridViewCommandCell);

    return _super.call(this, cellElement, "GridViewCommandCell");
  }

  return GridViewCommandCell;
}(GridViewCell_1.GridViewCell);

exports.GridViewCommandCell = GridViewCommandCell;
//# sourceMappingURL=GridViewCommandCell.js.map


/***/ }),

/***/ "./out-es5/cells/GridViewDataCell.js":
/*!*******************************************!*\
  !*** ./out-es5/cells/GridViewDataCell.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var GridViewCell_1 = __webpack_require__(/*! ./GridViewCell */ "./out-es5/cells/GridViewCell.js");
/**
 * 表格视图数据单元格
 * 用于渲染数据
 */


var GridViewDataCell = /*#__PURE__*/function (_GridViewCell_1$GridV) {
  _inherits(GridViewDataCell, _GridViewCell_1$GridV);

  var _super = _createSuper(GridViewDataCell);

  function GridViewDataCell(params, cellElement) {
    var _this;

    _classCallCheck(this, GridViewDataCell);

    _this = _super.call(this, cellElement, "GridViewDataCell");
    var p = params;
    _this.nullText = p.nullText != null ? p.nullText : '';
    _this.dataFormatString = p.dataFormatString;
    _this.dataField = p.dataField;

    if (p.render) {
      _this.render = function (dataItem) {
        return p.render.apply(_assertThisInitialized(_this), [dataItem, _this.element]);
      };
    }

    return _this;
  }
  /** 渲染数据 */


  _createClass(GridViewDataCell, [{
    key: "render",
    value: function render(dataItem) {
      var value = dataItem[this.dataField];
      var text;
      if (value == null) text = this.nullText;else text = this.formatValue(value, this.dataFormatString);
      this.element.innerHTML = text;
    }
    /** 格式化数据 */

  }, {
    key: "formatValue",
    value: function formatValue(value, format) {
      if (!format) return "".concat(value);
      var result = '';

      for (var i = 0;;) {
        var open = format.indexOf('{', i);
        var close = format.indexOf('}', i);

        if (open < 0 && close < 0) {
          result += format.slice(i);
          break;
        }

        if (close > 0 && (close < open || open < 0)) {
          if (format.charAt(close + 1) !== '}') {
            throw new Error('Sys.Res.stringFormatBraceMismatch');
          }

          result += format.slice(i, close + 1);
          i = close + 2;
          continue;
        }

        result += format.slice(i, open);
        i = open + 1;

        if (format.charAt(i) === '{') {
          result += '{';
          i++;
          continue;
        }

        if (close < 0) throw new Error('Sys.Res.stringFormatBraceMismatch');
        var brace = format.substring(i, close);
        var argFormat = brace;

        if (typeof value === "undefined" || value === null) {
          value = '';
        }

        if (value instanceof Date) result = result + this.formatDate(value, argFormat);else if (value instanceof Number || typeof value == 'number') result = result + this.formatNumber(value, argFormat);else result = result + value.toString();
        i = close + 1;
      }

      return result;
    }
  }, {
    key: "formatDate",
    value: function formatDate(value, format) {
      var y = value.getFullYear();
      var m = value.getMonth() + 1;
      var d = value.getDate();
      var h = value.getHours();
      var M = value.getMinutes();
      var s = value.getSeconds();

      var twoDigit = function twoDigit(value) {
        var TEN = 10;
        if (value < TEN) return "0" + value;
        return value.toString();
      };

      switch (format) {
        case 'd':
          return "".concat(y, "-").concat(m, "-").concat(d);

        case 'g':
          return "".concat(y, "-").concat(m, "-").concat(d, " ").concat(h, ":").concat(M);

        case 'gg':
          return "".concat(y, "-").concat(twoDigit(m), "-").concat(twoDigit(d), " ").concat(twoDigit(h), ":").concat(twoDigit(M));

        case 'G':
          return "".concat(y, "-").concat(m, "-").concat(d, " ").concat(h, ":").concat(M, ":").concat(s);

        case 'GG':
          return "".concat(y, "-").concat(twoDigit(m), "-").concat(twoDigit(d), " ").concat(twoDigit(h), ":").concat(twoDigit(M), ":").concat(twoDigit(s));

        case 't':
          return "".concat(h, ":").concat(M);

        case 'T':
          return "".concat(h, ":").concat(M, ":").concat(s);
      }

      return value.toString();
    }
  }, {
    key: "formatNumber",
    value: function formatNumber(value, format) {
      var reg = new RegExp('^C[0-9]+');

      if (reg.test(format)) {
        var num = format.substr(1);
        return value.toFixed(num);
      }

      return value.toString();
    }
  }]);

  return GridViewDataCell;
}(GridViewCell_1.GridViewCell);

exports.GridViewDataCell = GridViewDataCell;
//# sourceMappingURL=GridViewDataCell.js.map


/***/ }),

/***/ "./out-es5/cells/GridViewEditableCell.js":
/*!***********************************************!*\
  !*** ./out-es5/cells/GridViewEditableCell.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Errors_1 = __webpack_require__(/*! ../Errors */ "./out-es5/Errors.js");

var Utility_1 = __webpack_require__(/*! ../Utility */ "./out-es5/Utility.js");

var index_1 = __webpack_require__(/*! ./index */ "./out-es5/cells/index.js");

var GridViewEditableCell = /*#__PURE__*/function (_index_1$GridViewData) {
  _inherits(GridViewEditableCell, _index_1$GridViewData);

  var _super = _createSuper(GridViewEditableCell);

  function GridViewEditableCell(field, dataItem, cellElement) {
    var _this;

    _classCallCheck(this, GridViewEditableCell);

    if (field == null) throw Errors_1.Errors.argumentNull('field');
    if (dataItem == null) throw Errors_1.Errors.argumentNull('dataItem');
    _this = _super.call(this, {
      dataField: field.dataField,
      nullText: field.nullText,
      dataFormatString: field.dataFormatString
    }, cellElement);
    _this._field = field;
    _this._dataItem = dataItem;
    _this._mode = 'read';
    _this.type = "GridViewEditableCell";
    return _this;
  }

  _createClass(GridViewEditableCell, [{
    key: "beginEdit",
    value: function beginEdit() {
      if (this._field.readOnly) {
        return;
      }

      this._mode = 'edit';
      this.render(this._dataItem, "edit");
    }
  }, {
    key: "endEdit",
    value: function endEdit() {
      if (this._field.readOnly) {
        return;
      }

      this._mode = 'read';
      this.render(this._dataItem, "read");
    }
  }, {
    key: "cancelEdit",
    value: function cancelEdit() {
      if (this._field.readOnly) {
        return;
      }

      this._mode = 'read';
      this.render(this._dataItem, "read");
    }
  }, {
    key: "render",
    value: function render(dataItem, mode) {
      if (mode == 'edit') {
        this.element.innerHTML = "";
        this.createControl();
        console.assert(this.control != null);
        var value = dataItem[this.field.dataField];
        this.control.value = value;
        Utility_1.applyStyle(this.control.element, this._field.controlStyle);
        this.element.appendChild(this.control.element);
        return;
      } // this.control = null;


      _get(_getPrototypeOf(GridViewEditableCell.prototype), "render", this).call(this, dataItem);
    }
  }, {
    key: "createControl",
    value: function createControl() {
      this.control = this.field.createControl();
      return this.control.element;
    }
  }, {
    key: "dataItem",
    get: function get() {
      return this._dataItem;
    }
  }, {
    key: "field",
    get: function get() {
      return this._field;
    }
  }, {
    key: "mode",
    get: function get() {
      return this._mode;
    }
  }, {
    key: "controlValue",
    get: function get() {
      if (this.control == null) return null;
      return this.control.value;
    }
  }]);

  return GridViewEditableCell;
}(index_1.GridViewDataCell);

exports.GridViewEditableCell = GridViewEditableCell;
//# sourceMappingURL=GridViewEditableCell.js.map


/***/ }),

/***/ "./out-es5/cells/GridViewHeaderCell.js":
/*!*********************************************!*\
  !*** ./out-es5/cells/GridViewHeaderCell.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var maishu_toolkit_1 = __webpack_require__(/*! maishu-toolkit */ "maishu-toolkit");

var Errors_1 = __webpack_require__(/*! ../Errors */ "./out-es5/Errors.js");

var GridViewCell_1 = __webpack_require__(/*! ./GridViewCell */ "./out-es5/cells/GridViewCell.js");

var GridViewHeaderCell = /*#__PURE__*/function (_GridViewCell_1$GridV) {
  _inherits(GridViewHeaderCell, _GridViewCell_1$GridV);

  var _super = _createSuper(GridViewHeaderCell);

  function GridViewHeaderCell(field, cellElement) {
    var _this;

    _classCallCheck(this, GridViewHeaderCell);

    _this = _super.call(this, cellElement, "GridViewHeaderCell");
    _this.ascHTML = '↑';
    _this.descHTML = '↓';
    _this.sortingHTML = '...';
    _this.toSortHTML = '↕';
    _this.field = field;
    _this.sorting = new maishu_toolkit_1.Callback();
    _this.sorted = new maishu_toolkit_1.Callback();

    if (field.sortExpression) {
      var labelElement = document.createElement('a');
      labelElement.href = 'javascript:';
      labelElement.innerHTML = _this.defaultHeaderText();

      labelElement.onclick = function () {
        return _this.handleSort();
      };

      _this._iconElement = document.createElement('span');
      _this._iconElement.innerHTML = _this.toSortHTML;

      _this.appendChild(labelElement);

      _this.appendChild(_this._iconElement);

      _this.sorting.add(function () {
        return _this._iconElement.innerHTML = _this.sortingHTML;
      });

      _this.sorted.add(function () {
        return _this.updateSortIcon();
      });
    } else {
      _this.element.innerHTML = _this.defaultHeaderText();
    }

    _this.style(field.headerStyle);

    return _this;
  }

  _createClass(GridViewHeaderCell, [{
    key: "handleSort",
    value: function handleSort() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var selectArguments, sortType;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                selectArguments = this.field.gridView.selectArguments;

                if (!(this.field.gridView == null)) {
                  _context.next = 3;
                  break;
                }

                throw Errors_1.Errors.gridViewNull();

              case 3:
                sortType = this.sortType == 'asc' ? 'desc' : 'asc'; // fireCallback(this.sorting, this, { sortType });

                this.sorting.fire({
                  sortType: sortType
                });
                selectArguments.sortExpression = this.field.sortExpression + ' ' + sortType;
                _context.next = 8;
                return this.field.gridView.dataSource.select(selectArguments);

              case 8:
                this.sortType = sortType; // fireCallback(this.sorted, this, { sortType });

                this.sorted.fire({
                  sortType: sortType
                });

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "defaultHeaderText",
    value: function defaultHeaderText() {
      return this.field.headerText || this.field.dataField || '';
    }
  }, {
    key: "clearSortIcon",
    value: function clearSortIcon() {
      this._iconElement.innerHTML = this.toSortHTML;
    }
  }, {
    key: "updateSortIcon",
    value: function updateSortIcon() {
      if (this.sortType == 'asc') {
        this._iconElement.innerHTML = this.ascHTML;
      } else if (this.sortType == 'desc') {
        this._iconElement.innerHTML = this.descHTML;
      } else {
        this._iconElement.innerHTML = this.toSortHTML;
      }
    }
  }, {
    key: "sortType",
    get: function get() {
      return this._sortType;
    },
    set: function set(value) {
      this._sortType = value;
    }
  }]);

  return GridViewHeaderCell;
}(GridViewCell_1.GridViewCell);

exports.GridViewHeaderCell = GridViewHeaderCell;
//# sourceMappingURL=GridViewHeaderCell.js.map


/***/ }),

/***/ "./out-es5/cells/index.js":
/*!********************************!*\
  !*** ./out-es5/cells/index.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var GridViewCell_1 = __webpack_require__(/*! ./GridViewCell */ "./out-es5/cells/GridViewCell.js");

exports.GridViewCell = GridViewCell_1.GridViewCell;

var GridViewDataCell_1 = __webpack_require__(/*! ./GridViewDataCell */ "./out-es5/cells/GridViewDataCell.js");

exports.GridViewDataCell = GridViewDataCell_1.GridViewDataCell;

var GridViewHeaderCell_1 = __webpack_require__(/*! ./GridViewHeaderCell */ "./out-es5/cells/GridViewHeaderCell.js");

exports.GridViewHeaderCell = GridViewHeaderCell_1.GridViewHeaderCell;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./out-es5/data-source/ArrayDataSource.js":
/*!************************************************!*\
  !*** ./out-es5/data-source/ArrayDataSource.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __classPrivateFieldGet = void 0 && (void 0).__classPrivateFieldGet || function (receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }

  return privateMap.get(receiver);
};

var __classPrivateFieldSet = void 0 && (void 0).__classPrivateFieldSet || function (receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }

  privateMap.set(receiver, value);
  return value;
};

var _dataItems;

Object.defineProperty(exports, "__esModule", {
  value: true
});

var maishu_toolkit_1 = __webpack_require__(/*! maishu-toolkit */ "maishu-toolkit");

var ArrayDataSource = /*#__PURE__*/function (_maishu_toolkit_1$Dat) {
  _inherits(ArrayDataSource, _maishu_toolkit_1$Dat);

  var _super = _createSuper(ArrayDataSource);

  function ArrayDataSource(dataItems, primaryKeys) {
    var _this;

    _classCallCheck(this, ArrayDataSource);

    _this = _super.call(this, {
      primaryKeys: primaryKeys,
      select: function select(args) {
        return __awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
          var arr, dataItems, result;
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  arr = this.dataItems;

                  if (!(args.maximumRows == null || args.maximumRows <= arr.length)) {
                    _context.next = 3;
                    break;
                  }

                  return _context.abrupt("return", {
                    dataItems: arr,
                    totalRowCount: arr.length
                  });

                case 3:
                  args.startRowIndex = args.startRowIndex || 0;
                  dataItems = arr.slice(args.startRowIndex, args.startRowIndex + args.maximumRows);
                  result = {
                    dataItems: dataItems,
                    totalRowCount: arr.length
                  };
                  return _context.abrupt("return", result);

                case 7:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));
      },
      update: function update(dataItem) {
        return __awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
          var item;
          return regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  item = this.findDataItem(dataItem);

                  if (item != null) {
                    Object.assign(item, dataItem);
                  }

                  return _context2.abrupt("return", item);

                case 3:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2, this);
        }));
      },
      insert: function insert(dataItem) {
        return __awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
          var items;
          return regeneratorRuntime.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  items = this.dataItems;
                  items.push(dataItem);

                case 2:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3, this);
        }));
      },
      delete: function _delete(dataItem) {
        return __awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
          var item;
          return regeneratorRuntime.wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  item = this.findDataItem(dataItem);

                  if (item == null) {
                    console.assert(__classPrivateFieldGet(this, _dataItems) != null);

                    __classPrivateFieldSet(this, _dataItems, __classPrivateFieldGet(this, _dataItems).filter(function (o) {
                      return o != item;
                    }));
                  }

                  return _context4.abrupt("return", item);

                case 3:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4, this);
        }));
      }
    });

    _dataItems.set(_assertThisInitialized(_this), void 0);

    __classPrivateFieldSet(_assertThisInitialized(_this), _dataItems, dataItems);

    return _this;
  }

  _createClass(ArrayDataSource, [{
    key: "findDataItem",
    value: function findDataItem(pks) {
      var items = this.dataItems;

      for (var i = 0; i < items.length; i++) {
        if (this.samePrimaryKeyValues(items[i], pks)) {
          return items[i];
        }
      }

      return null;
    }
  }, {
    key: "samePrimaryKeyValues",
    value: function samePrimaryKeyValues(item1, item2) {
      for (var j = 0; j < this.primaryKeys.length; j++) {
        if (item1[this.primaryKeys[j]] != item2[this.primaryKeys[j]]) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "dataItems",
    get: function get() {
      return __classPrivateFieldGet(this, _dataItems);
    },
    set: function set(value) {
      __classPrivateFieldSet(this, _dataItems, value);
    }
  }]);

  return ArrayDataSource;
}(maishu_toolkit_1.DataSource);

exports.ArrayDataSource = ArrayDataSource;
_dataItems = new WeakMap();
//# sourceMappingURL=ArrayDataSource.js.map


/***/ }),

/***/ "./out-es5/data-source/index.js":
/*!**************************************!*\
  !*** ./out-es5/data-source/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var ArrayDataSource_1 = __webpack_require__(/*! ./ArrayDataSource */ "./out-es5/data-source/ArrayDataSource.js");

exports.ArrayDataSource = ArrayDataSource_1.ArrayDataSource;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./out-es5/fields/BoundField.js":
/*!**************************************!*\
  !*** ./out-es5/fields/BoundField.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var DataControlField_1 = __webpack_require__(/*! ./DataControlField */ "./out-es5/fields/DataControlField.js");

var GridViewEditableCell_1 = __webpack_require__(/*! ../cells/GridViewEditableCell */ "./out-es5/cells/GridViewEditableCell.js");

var BoundField = /*#__PURE__*/function (_DataControlField_1$D) {
  _inherits(BoundField, _DataControlField_1$D);

  var _super = _createSuper(BoundField);

  function BoundField() {
    _classCallCheck(this, BoundField);

    return _super.apply(this, arguments);
  }

  _createClass(BoundField, [{
    key: "createItemCell",
    value: function createItemCell(dataItem, cellElement) {
      cellElement = cellElement || this.elementProvider.createCellElement("body");
      var cell = new GridViewEditableCell_1.GridViewEditableCell(this, dataItem, cellElement);
      cell.style(this.itemStyle);
      return cell;
    }
    /**
     * Gets the field for the value.
     */

  }, {
    key: "createControl",
    //===============================================
    // Virutal Methods
    value: function createControl() {
      var element = document.createElement("input");
      var valueType = this.params.valueType;
      var field = this;
      var control = {
        element: element,

        get value() {
          var it = this;
          var input = it.element;
          var text = input.value;
          input.name = "".concat(field.dataField);

          if (field.params.emptyText) {
            input.placeholder = field.params.emptyText;
          }

          switch (valueType) {
            case 'number':
              return new Number(text).valueOf();

            case 'date':
              return new Date(text);

            default:
              return text;
          }
        },

        set value(value) {
          var it = this;
          var input = it.element;
          input.value = value == null ? "" : value;
        }

      };
      return control;
    }
  }, {
    key: "nullText",

    /**
     * Gets the caption displayed for a field when the field's value is null.
     */
    get: function get() {
      return this.params.nullText || "";
    }
  }, {
    key: "dataField",
    get: function get() {
      return this.params.dataField;
    }
    /**
     * Gets the string that specifies the display format for the value of the field.
     */

  }, {
    key: "dataFormatString",
    get: function get() {
      return this.params.dataFormatString;
    }
  }, {
    key: "controlStyle",
    get: function get() {
      return this.params.controlStyle;
    }
  }, {
    key: "readOnly",
    get: function get() {
      return this.params.readOnly;
    }
  }, {
    key: "validateRules",
    get: function get() {
      return this.params.validateRules;
    }
  }]);

  return BoundField;
}(DataControlField_1.DataControlField);

exports.BoundField = BoundField;
//# sourceMappingURL=BoundField.js.map


/***/ }),

/***/ "./out-es5/fields/CommandField.js":
/*!****************************************!*\
  !*** ./out-es5/fields/CommandField.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 /// <reference path="DataControlField.ts"/>

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var DataControlField_1 = __webpack_require__(/*! ./DataControlField */ "./out-es5/fields/DataControlField.js");

var Control_1 = __webpack_require__(/*! ../Control */ "./out-es5/Control.js");

var Utility_1 = __webpack_require__(/*! ../Utility */ "./out-es5/Utility.js");

var GridViewCommandCell_1 = __webpack_require__(/*! ../cells/GridViewCommandCell */ "./out-es5/cells/GridViewCommandCell.js");

var maishu_toolkit_1 = __webpack_require__(/*! maishu-toolkit */ "maishu-toolkit");

var CommandField = /*#__PURE__*/function (_DataControlField_1$D) {
  _inherits(CommandField, _DataControlField_1$D);

  var _super = _createSuper(CommandField);

  function CommandField(params) {
    var _this;

    _classCallCheck(this, CommandField);

    _this = _super.call(this, params);
    if (!_this.params.cancelButtonHTML) _this.params.cancelButtonHTML = '取消';
    if (!_this.params.deleteButtonHTML) _this.params.deleteButtonHTML = '删除';
    if (!_this.params.editButtonHTML) _this.params.editButtonHTML = '编辑';
    if (!_this.params.updateButtonHTML) _this.params.updateButtonHTML = '更新';
    if (!_this.params.newButtonHTML) _this.params.newButtonHTML = '新增';
    if (!_this.params.insertButtonHTML) _this.params.insertButtonHTML = '添加';
    return _this;
  } // private params(): CommandFieldParams {
  //     return this.params;
  // }


  _createClass(CommandField, [{
    key: "createItemCell",
    value: function createItemCell(dataItem) {
      var _this2 = this;

      var cell = new GridViewCommandCell_1.GridViewCommandCell(this, this.elementProvider.createCellElement("body"));
      cell.style(this.itemStyle);

      if (this.params.showEditButton) {
        var editButton = this.createEditButton();
        editButton.style.marginRight = '4px';
        if (this.editButtonClass) maishu_toolkit_1.HTML.addClassName(editButton, this.editButtonClass); //editButton.className = this.editButtonClass;

        cell.editButton = editButton;
        editButton.addEventListener('click', function (e) {
          return _this2.on_editButtonClick(e);
        });
        cell.appendChild(editButton);
        var updateButton = this.createUpdateButton();
        updateButton.style.display = 'none';
        updateButton.style.marginRight = '4px';
        if (this.updateButtonClass) maishu_toolkit_1.HTML.addClassName(updateButton, this.updateButtonClass); //updateButton.className = this.updateButtonClass;

        cell.updateButton = updateButton;
        updateButton.addEventListener('click', function (e) {
          return _this2.on_insertOrUpdateButtonClick(e);
        });
        cell.appendChild(updateButton);
        var cancelButton = this.createCancelButton();
        cancelButton.style.display = 'none';
        cancelButton.style.marginRight = '4px';
        if (this.cancelButtonClass) maishu_toolkit_1.HTML.addClassName(cancelButton, this.cancelButtonClass); //cancelButton.className = this.cancelButtonClass;

        cell.cacelButton = cancelButton;
        cancelButton.addEventListener('click', function (e) {
          return _this2.on_cancelButtonClick(e);
        });
        cell.appendChild(cancelButton);
      }

      if (this.params.showDeleteButton) {
        var deleteButton = this.createDeleteButton();
        deleteButton.style.marginRight = '4px';
        if (this.deleteButtonClass) maishu_toolkit_1.HTML.addClassName(deleteButton, this.deleteButtonClass); //deleteButton.className = this.deleteButtonClass;

        cell.deleteButton = deleteButton;

        deleteButton.onclick = function (e) {
          return _this2.on_deleteButtonClick(e);
        };

        cell.appendChild(deleteButton);
      }

      if (this.params.showNewButton) {
        var newButton = this.createNewButton();
        newButton.style.marginRight = '4px';
        if (this.newButtonClass) maishu_toolkit_1.HTML.addClassName(newButton, this.newButtonClass); //newButton.className = this.newButtonClass;

        newButton.onclick = function (e) {
          return _this2.on_newButtonClick(e);
        };

        cell.newButton = newButton;
        cell.appendChild(newButton);
        var insertButton = this.createInsertButton();
        insertButton.style.display = 'none';
        insertButton.style.marginRight = '4px';
        insertButton.addEventListener('click', function (e) {
          return _this2.on_insertOrUpdateButtonClick(e);
        });
        if (this.insertButtonClass) maishu_toolkit_1.HTML.addClassName(insertButton, this.insertButtonClass); // insertButton.className = this.updateButtonClass;

        cell.insertButton = insertButton;
        cell.appendChild(insertButton);

        var _cancelButton = this.createCancelButton();

        _cancelButton.style.display = 'none';
        _cancelButton.style.marginRight = '4px';

        _cancelButton.addEventListener('click', function (e) {
          return _this2.on_cancelButtonClick(e);
        });

        if (this.cancelButtonClass) maishu_toolkit_1.HTML.addClassName(_cancelButton, this.cancelButtonClass); // cancelButton.className = this.cancelButtonClass;

        cell.cacelButton = _cancelButton;
        cell.appendChild(_cancelButton);
      }

      return cell;
    }
  }, {
    key: "showReadStatusButtons",
    value: function showReadStatusButtons(cell) {
      if (cell.newButton) {
        this.showButton(cell.newButton);
        this.hideButton(cell.insertButton);
      }

      if (cell.editButton) {
        this.showButton(cell.editButton);
        this.hideButton(cell.updateButton);
      }

      if (cell.deleteButton) this.showButton(cell.deleteButton);
      this.hideButton(cell.cacelButton);
    }
  }, {
    key: "createEditButton",
    value: function createEditButton() {
      var button = document.createElement('a');
      button.innerHTML = this.editButtonHTML;
      button.href = 'javascript:';
      return button;
    }
  }, {
    key: "createDeleteButton",
    value: function createDeleteButton() {
      var button = document.createElement('a');
      button.innerHTML = this.deleteButtonHTML;
      button.href = 'javascript:';
      return button;
    }
  }, {
    key: "createInsertButton",
    value: function createInsertButton() {
      var button = document.createElement('a');
      button.innerHTML = this.insertButtonHTML;
      button.href = 'javascript:';
      return button;
    }
  }, {
    key: "createUpdateButton",
    value: function createUpdateButton() {
      var button = document.createElement('a');
      button.innerHTML = this.updateButtonHTML;
      button.href = 'javascript:';
      return button;
    }
  }, {
    key: "createCancelButton",
    value: function createCancelButton() {
      var button = document.createElement('a');
      button.innerHTML = this.cancelButtonHTML;
      button.href = 'javascript:';
      return button;
    }
  }, {
    key: "createNewButton",
    value: function createNewButton() {
      var button = document.createElement('a');
      button.innerHTML = this.newButtonHTML;
      button.href = 'javascript:';
      return button;
    }
  }, {
    key: "hideButton",
    value: function hideButton(button) {
      button.style.display = 'none';
    }
  }, {
    key: "showButton",
    value: function showButton(button) {
      button.style.removeProperty('display');
    }
  }, {
    key: "findParentCell",
    value: function findParentCell(element) {
      var cellElement;
      var p = element.parentElement;

      while (p) {
        if (p.tagName == 'TD') {
          cellElement = p;
          break;
        }

        p = p.parentElement;
      }

      return cellElement;
    }
  }, {
    key: "on_editButtonClick",
    value: function on_editButtonClick(e) {
      var cellElement = this.findParentCell(e.target);
      console.assert(cellElement != null);
      var rowElement = cellElement.parentElement;

      for (var i = 0; i < rowElement.cells.length; i++) {
        var _cell = Control_1.Control.getControlByElement(rowElement.cells[i]);

        if (_cell.type == "GridViewEditableCell") {
          _cell.beginEdit();
        }
      }

      var cell = Control_1.Control.getControlByElement(cellElement);
      this.showButton(cell.cacelButton);
      this.showButton(cell.updateButton);
      this.hideButton(cell.editButton);
      if (cell.deleteButton) this.hideButton(cell.deleteButton);
      if (cell.newButton) this.hideButton(cell.newButton);
    }
  }, {
    key: "on_cancelButtonClick",
    value: function on_cancelButtonClick(e) {
      var cellElement = this.findParentCell(e.target);
      console.assert(cellElement != null);
      var rowElement = cellElement.parentElement;
      var row = Control_1.Control.getControlByElement(rowElement);

      if (row["isNew"] == true) {
        rowElement.remove();
        return;
      }

      for (var i = 0; i < rowElement.cells.length; i++) {
        var _cell2 = Control_1.Control.getControlByElement(rowElement.cells[i]);

        if (_cell2.type == "GridViewEditableCell") {
          _cell2.cancelEdit();
        }
      }

      var cell = Control_1.Control.getControlByElement(cellElement);
      this.hideButton(cell.cacelButton);
      this.hideButton(cell.updateButton);
      this.showButton(cell.editButton);
      if (cell.deleteButton) this.showButton(cell.deleteButton);
      if (cell.newButton) this.showButton(cell.newButton);
    }
  }, {
    key: "on_insertOrUpdateButtonClick",
    value: function on_insertOrUpdateButtonClick(e) {
      var _this3 = this;

      if (e.target['_updating']) e.target['_updating'] = true;
      var cellElement = Utility_1.ElementHelper.findFirstParentByTagName(e.target, 'td');
      var rowElement = cellElement.parentElement;
      var cell = Control_1.Control.getControlByElement(cellElement);
      var row = Control_1.Control.getControlByElement(rowElement); //==========================================================
      // 复制 dataItem 副本

      var dataItem = Object.assign({}, row.dataItem || {}); //==========================================================

      var dataSource = row.gridView.dataSource;
      var editableCells = new Array();

      for (var i = 0; i < rowElement.cells.length; i++) {
        var _cell3 = Control_1.Control.getControlByElement(rowElement.cells[i]);

        if (_cell3.type == "GridViewEditableCell" && _cell3.mode == 'edit') {
          var field = _cell3.field;
          dataItem[field.dataField] = _cell3.controlValue;
          editableCells.push(_cell3);
        }
      }

      var isInsert = e.target == cell.insertButton;
      var p = isInsert ? dataSource.insert(dataItem, rowElement.rowIndex) : dataSource.update(dataItem);
      return p.then(function () {
        if (isInsert) {
          rowElement.remove();
          return;
        }

        editableCells.forEach(function (item) {
          return item.endEdit();
        });
        var cell = Control_1.Control.getControlByElement(cellElement);

        _this3.showReadStatusButtons(cell);

        e.target['_updating'] = false;
      }).catch(function () {
        return e.target['_updating'] = false;
      });
    }
  }, {
    key: "on_deleteButtonClick",
    value: function on_deleteButtonClick(e) {
      var rowElement = Utility_1.ElementHelper.findFirstParentByTagName(e.target, "tr");
      var row = Control_1.Control.getControlByElement(rowElement);
      var dataSource = row.gridView.dataSource;
      dataSource.delete(row.dataItem).then(function () {
        rowElement.remove();
      });
    }
  }, {
    key: "on_newButtonClick",
    value: function on_newButtonClick(e) {
      var _this4 = this;

      var rowElement = Utility_1.ElementHelper.findFirstParentByTagName(e.target, "tr"); //cellElement.parentElement as HTMLTableRowElement;

      var row = Control_1.Control.getControlByElement(rowElement);
      var gridView = row.gridView;
      var newRow = gridView.appendDataRow({}, rowElement.rowIndex);
      newRow["isNew"] = true;
      var commandCells = newRow.cells.filter(function (o) {
        return o.type == "GridViewCommandCell";
      }); //GridViewCommandCell

      newRow.cells.filter(function (o) {
        return o.type == "GridViewEditableCell";
      }) //GridViewEditableCell
      .forEach(function (c) {
        return c.beginEdit();
      });
      commandCells.forEach(function (c) {
        var cell = c;
        if (cell.deleteButton) _this4.hideButton(cell.deleteButton);
        if (cell.editButton) _this4.hideButton(cell.editButton);

        _this4.hideButton(cell.newButton);

        _this4.showButton(cell.insertButton);

        _this4.showButton(cell.cacelButton);
      });
    }
  }, {
    key: "cancelButtonHTML",
    get: function get() {
      return this.params.cancelButtonHTML;
    }
  }, {
    key: "deleteButtonHTML",
    get: function get() {
      return this.params.deleteButtonHTML;
    }
  }, {
    key: "editButtonHTML",
    get: function get() {
      return this.params.editButtonHTML;
    }
  }, {
    key: "updateButtonHTML",
    get: function get() {
      return this.params.updateButtonHTML;
    }
  }, {
    key: "newButtonHTML",
    get: function get() {
      return this.params.newButtonHTML;
    }
  }, {
    key: "insertButtonHTML",
    get: function get() {
      return this.params.insertButtonHTML;
    }
  }, {
    key: "cancelButtonClass",
    get: function get() {
      return this.params.cancelButtonClass;
    }
  }, {
    key: "deleteButtonClass",
    get: function get() {
      return this.params.deleteButtonClass;
    }
  }, {
    key: "editButtonClass",
    get: function get() {
      return this.params.editButtonClass;
    }
  }, {
    key: "newButtonClass",
    get: function get() {
      return this.params.newButtonClass;
    }
  }, {
    key: "updateButtonClass",
    get: function get() {
      return this.params.updateButtonClass;
    }
  }, {
    key: "insertButtonClass",
    get: function get() {
      return this.params.insertButtonClass;
    }
  }]);

  return CommandField;
}(DataControlField_1.DataControlField);

exports.CommandField = CommandField;
//# sourceMappingURL=CommandField.js.map


/***/ }),

/***/ "./out-es5/fields/CustomBoundField.js":
/*!********************************************!*\
  !*** ./out-es5/fields/CustomBoundField.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var BoundField_1 = __webpack_require__(/*! ./BoundField */ "./out-es5/fields/BoundField.js");

var CustomBoundField = /*#__PURE__*/function (_BoundField_1$BoundFi) {
  _inherits(CustomBoundField, _BoundField_1$BoundFi);

  var _super = _createSuper(CustomBoundField);

  function CustomBoundField(params) {
    _classCallCheck(this, CustomBoundField);

    return _super.call(this, params);
  }

  _createClass(CustomBoundField, [{
    key: "createItemCell",
    value: function createItemCell(dataItem, cellElement) {
      var cell = _get(_getPrototypeOf(CustomBoundField.prototype), "createItemCell", this).call(this, dataItem, cellElement);

      var cellRender = cell.render;

      cell.render = function (dataItem) {
        var it = this;
        var params = it.field.params;

        if (it.mode == "read" && params.cellRender != null) {
          params.cellRender.apply(cell, [dataItem, it.element]);
          return;
        }

        cellRender.apply(cell, [dataItem]);
      };

      return cell;
    }
  }]);

  return CustomBoundField;
}(BoundField_1.BoundField);

exports.CustomBoundField = CustomBoundField;
//# sourceMappingURL=CustomBoundField.js.map


/***/ }),

/***/ "./out-es5/fields/CustomField.js":
/*!***************************************!*\
  !*** ./out-es5/fields/CustomField.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var DataControlField_1 = __webpack_require__(/*! ./DataControlField */ "./out-es5/fields/DataControlField.js");

var CustomField = /*#__PURE__*/function (_DataControlField_1$D) {
  _inherits(CustomField, _DataControlField_1$D);

  var _super = _createSuper(CustomField);

  function CustomField() {
    _classCallCheck(this, CustomField);

    return _super.apply(this, arguments);
  }

  _createClass(CustomField, [{
    key: "createHeaderCell",
    value: function createHeaderCell(cellElement) {
      if (this.params.createHeaderCell) {
        var cell = this.params.createHeaderCell(cellElement);
        cell.style(this.headerStyle);
        return cell;
      }

      return _get(_getPrototypeOf(CustomField.prototype), "createHeaderCell", this).call(this, cellElement);
    }
  }, {
    key: "createFooterCell",
    value: function createFooterCell(cellElement) {
      if (this.params.createFooterCell) {
        var cell = this.params.createFooterCell(cellElement);
        if (this.params.footerStyle) cell.style(this.params.footerStyle);
        return cell;
      }

      return _get(_getPrototypeOf(CustomField.prototype), "createFooterCell", this).call(this, cellElement);
    }
  }, {
    key: "createItemCell",
    value: function createItemCell(dataItem, cellElement) {
      if (this.params.createItemCell) {
        var cell = this.params.createItemCell.apply(this, [dataItem, cellElement]);
        cell.style(this.params.itemStyle);
        return cell;
      }

      return _get(_getPrototypeOf(CustomField.prototype), "createItemCell", this).call(this, dataItem, cellElement);
    }
  }]);

  return CustomField;
}(DataControlField_1.DataControlField);

exports.CustomField = CustomField;
//# sourceMappingURL=CustomField.js.map


/***/ }),

/***/ "./out-es5/fields/DataControlField.js":
/*!********************************************!*\
  !*** ./out-es5/fields/DataControlField.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var __classPrivateFieldSet = void 0 && (void 0).__classPrivateFieldSet || function (receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }

  privateMap.set(receiver, value);
  return value;
};

var __classPrivateFieldGet = void 0 && (void 0).__classPrivateFieldGet || function (receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }

  return privateMap.get(receiver);
};

var _gridView, _elementProvider;

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Errors_1 = __webpack_require__(/*! ../Errors */ "./out-es5/Errors.js");

var index_1 = __webpack_require__(/*! ../cells/index */ "./out-es5/cells/index.js");

var DataControlField = /*#__PURE__*/function () {
  function DataControlField(params, elementProvider) {
    _classCallCheck(this, DataControlField);

    _gridView.set(this, void 0);

    _elementProvider.set(this, void 0);

    if (params.visible == null) params.visible = true;
    this.params = params;

    __classPrivateFieldSet(this, _elementProvider, elementProvider);
  }
  /**
   * Gets the text that is displayed in the footer item of a data control field.
   */


  _createClass(DataControlField, [{
    key: "createHeaderCell",
    value: function createHeaderCell(cellElement) {
      var cell = new index_1.GridViewHeaderCell(this, cellElement);
      return cell;
    }
  }, {
    key: "createFooterCell",
    value: function createFooterCell(cellElement) {
      var cell = new index_1.GridViewCell(cellElement);
      cell.element.innerHTML = this.footerText || '';
      cell.style(this.footerStyle);
      return cell;
    }
    /**
     * 创建数据项单元格对象
     * @param dataItem 数据项
     * @param cellElement 单元格元素
     */

  }, {
    key: "createItemCell",
    value: function createItemCell(dataItem, cellElement) {
      if (!dataItem) throw Errors_1.Errors.argumentNull('dataItem');
      var cell = new index_1.GridViewCell(cellElement);
      cell.style(this.itemStyle);
      return cell;
    }
  }, {
    key: "footerText",
    get: function get() {
      return this.params.footerText;
    }
    /**
     * Sets the text that is displayed in the footer item of a data control field.
     */
    ,
    set: function set(value) {
      this.params.footerText = value;
    }
    /**
     * Gets the text that is displayed in the header item of a data control field.
     */

  }, {
    key: "headerText",
    get: function get() {
      return this.params.headerText;
    }
    /**
     * Sets the text that is displayed in the header item of a data control field.
     */
    ,
    set: function set(value) {
      this.params.headerText = value;
    }
  }, {
    key: "elementProvider",
    get: function get() {
      if (__classPrivateFieldGet(this, _elementProvider) != null) return __classPrivateFieldGet(this, _elementProvider);
      if (this.gridView != null) return this.gridView.elementProvider;
      return null;
    }
  }, {
    key: "itemStyle",
    get: function get() {
      return this.params.itemStyle;
    },
    set: function set(value) {
      this.params.itemStyle = value;
    }
  }, {
    key: "footerStyle",
    get: function get() {
      return this.params.footerStyle;
    },
    set: function set(value) {
      this.params.footerStyle = value;
    }
  }, {
    key: "headerStyle",
    get: function get() {
      return this.params.headerStyle;
    },
    set: function set(value) {
      this.params.headerStyle = value;
    }
  }, {
    key: "visible",
    get: function get() {
      return this.params.visible;
    }
  }, {
    key: "gridView",
    get: function get() {
      return __classPrivateFieldGet(this, _gridView);
    },
    set: function set(value) {
      __classPrivateFieldSet(this, _gridView, value);
    }
    /**
     * Gets a sort expression that is used by a data source control to sort data.
     */

  }, {
    key: "sortExpression",
    get: function get() {
      return this.params.sortExpression;
    }
    /**
     * Sets a sort expression that is used by a data source control to sort data.
     */
    ,
    set: function set(value) {
      this.params.sortExpression = value;
    }
  }]);

  return DataControlField;
}();

exports.DataControlField = DataControlField;
_gridView = new WeakMap(), _elementProvider = new WeakMap();
//# sourceMappingURL=DataControlField.js.map


/***/ }),

/***/ "./out-es5/fields/DropdownField.js":
/*!*****************************************!*\
  !*** ./out-es5/fields/DropdownField.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __classPrivateFieldSet = void 0 && (void 0).__classPrivateFieldSet || function (receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }

  privateMap.set(receiver, value);
  return value;
};

var __classPrivateFieldGet = void 0 && (void 0).__classPrivateFieldGet || function (receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }

  return privateMap.get(receiver);
};

var _dataItems, _dataSource;

Object.defineProperty(exports, "__esModule", {
  value: true
});

var BoundField_1 = __webpack_require__(/*! ./BoundField */ "./out-es5/fields/BoundField.js");

var maishu_toolkit_1 = __webpack_require__(/*! maishu-toolkit */ "maishu-toolkit");

var DropDown_1 = __webpack_require__(/*! ../DropDown */ "./out-es5/DropDown.js");

var emptyValue = "";

var DropdownField = /*#__PURE__*/function (_BoundField_1$BoundFi) {
  _inherits(DropdownField, _BoundField_1$BoundFi);

  var _super = _createSuper(DropdownField);

  function DropdownField(params) {
    var _this;

    _classCallCheck(this, DropdownField);

    _this = _super.call(this, params);

    _dataItems.set(_assertThisInitialized(_this), void 0);

    _dataSource.set(_assertThisInitialized(_this), void 0);

    if (!params.dataSource) throw maishu_toolkit_1.errors.argumentFieldNull("params", "dataSource");
    if (!params.nameField) throw maishu_toolkit_1.errors.argumentFieldNull("params", "nameField");
    if (!params.valueField) throw maishu_toolkit_1.errors.argumentFieldNull("params", "valueField");

    __classPrivateFieldSet(_assertThisInitialized(_this), _dataSource, params.dataSource);

    params.dataSource.deleted.add(function (args) {
      var dataItem = _this.findDataItem(args.dataItem);

      if (dataItem != null) {
        __classPrivateFieldSet(_assertThisInitialized(_this), _dataItems, __classPrivateFieldGet(_assertThisInitialized(_this), _dataItems).filter(function (o) {
          return o != dataItem;
        }));
      }
    });
    params.dataSource.inserted.add(function (args) {
      if (__classPrivateFieldGet(_assertThisInitialized(_this), _dataItems)) {
        __classPrivateFieldGet(_assertThisInitialized(_this), _dataItems).push(args.dataItem);
      }
    });
    params.dataSource.updated.add(function (args) {
      var dataItem = _this.findDataItem(args.dataItem);

      if (dataItem != null) {
        dataItem = Object.assign(dataItem, args.dataItem);
      }
    });
    return _this;
  }

  _createClass(DropdownField, [{
    key: "findDataItem",
    value: function findDataItem(pks) {
      var items = __classPrivateFieldGet(this, _dataItems) || [];

      for (var i = 0; i < items.length; i++) {
        if (this.samePrimaryKeyValues(items[i], pks)) {
          return items[i];
        }
      }

      return null;
    }
  }, {
    key: "samePrimaryKeyValues",
    value: function samePrimaryKeyValues(item1, item2) {
      var primaryKeys = __classPrivateFieldGet(this, _dataSource).primaryKeys;

      for (var j = 0; j < __classPrivateFieldGet(this, _dataSource).primaryKeys.length; j++) {
        if (item1[primaryKeys[j]] != item2[primaryKeys[j]]) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "getDataItems",
    value: function getDataItems() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var r;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (__classPrivateFieldGet(this, _dataItems)) {
                  _context.next = 5;
                  break;
                }

                _context.next = 3;
                return __classPrivateFieldGet(this, _dataSource).select({
                  startRowIndex: 0,
                  maximumRows: 1000
                });

              case 3:
                r = _context.sent;

                __classPrivateFieldSet(this, _dataItems, r.dataItems);

              case 5:
                return _context.abrupt("return", __classPrivateFieldGet(this, _dataItems));

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "createControl",
    value: function createControl() {
      var element = document.createElement("select");
      element.className = "form-control";

      if (this.params.emptyText) {
        var o = document.createElement("option");
        var emptyText = this.params.emptyText;
        if (emptyText != null) o.innerText = emptyText;
        o.value = emptyValue;
        element.append(o);
      }

      new DropDown_1.Dropdown({
        element: element,
        dataSource: this.params.dataSource,
        nameField: this.params.nameField,
        valueField: this.params.valueField
      });
      return {
        element: element,

        get value() {
          return element.value;
        },

        set value(value) {
          if (value == null) {
            element.value = emptyValue;
            return;
          }

          element.value = value;
        }

      };
    }
  }, {
    key: "createItemCell",
    value: function createItemCell(dataItem, cellElement) {
      var cell = _get(_getPrototypeOf(DropdownField.prototype), "createItemCell", this).call(this, dataItem, cellElement);

      var cellRender = cell.render;
      var field = this;

      cell.render = function (dataItem, mode) {
        mode = mode || "read";
        var it = this;
        var params = it.field.params;

        if (mode == "read") {
          field.getDataItems().then(function (dataItems) {
            var item = dataItems.filter(function (o) {
              return o[params.valueField] == dataItem[params.dataField];
            })[0];
            var content = "";

            if (item != null && item[params.nameField] != null) {
              content = "".concat(item[params.nameField]);
            }

            cellElement.innerHTML = content;
          });
          return;
        }

        cellRender.apply(cell, [dataItem, mode]);
      };

      return cell;
    }
  }]);

  return DropdownField;
}(BoundField_1.BoundField);

exports.DropdownField = DropdownField;
_dataItems = new WeakMap(), _dataSource = new WeakMap();
//# sourceMappingURL=DropdownField.js.map


/***/ }),

/***/ "./out-es5/index.js":
/*!**************************!*\
  !*** ./out-es5/index.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var GridView_1 = __webpack_require__(/*! ./GridView */ "./out-es5/GridView.js");

exports.GridView = GridView_1.GridView;

var BoundField_1 = __webpack_require__(/*! ./fields/BoundField */ "./out-es5/fields/BoundField.js");

exports.BoundField = BoundField_1.BoundField;

var CommandField_1 = __webpack_require__(/*! ./fields/CommandField */ "./out-es5/fields/CommandField.js");

exports.CommandField = CommandField_1.CommandField;

var CustomField_1 = __webpack_require__(/*! ./fields/CustomField */ "./out-es5/fields/CustomField.js");

exports.CustomField = CustomField_1.CustomField;

var CustomBoundField_1 = __webpack_require__(/*! ./fields/CustomBoundField */ "./out-es5/fields/CustomBoundField.js");

exports.CustomBoundField = CustomBoundField_1.CustomBoundField;

var DataControlField_1 = __webpack_require__(/*! ./fields/DataControlField */ "./out-es5/fields/DataControlField.js");

exports.DataControlField = DataControlField_1.DataControlField;

var DropdownField_1 = __webpack_require__(/*! ./fields/DropdownField */ "./out-es5/fields/DropdownField.js");

exports.DropdownField = DropdownField_1.DropdownField;

var GridViewEditableCell_1 = __webpack_require__(/*! ./cells/GridViewEditableCell */ "./out-es5/cells/GridViewEditableCell.js");

exports.GridViewEditableCell = GridViewEditableCell_1.GridViewEditableCell;

var DropDown_1 = __webpack_require__(/*! ./DropDown */ "./out-es5/DropDown.js");

exports.DropDown = DropDown_1.Dropdown;

var TextBox_1 = __webpack_require__(/*! ./TextBox */ "./out-es5/TextBox.js");

exports.TextBox = TextBox_1.TextBox;

var index_1 = __webpack_require__(/*! ./data-source/index */ "./out-es5/data-source/index.js");

exports.ArrayDataSource = index_1.ArrayDataSource;

var NumberPagingBar_1 = __webpack_require__(/*! ./NumberPagingBar */ "./out-es5/NumberPagingBar.js");

exports.DataSourcePagingBar = NumberPagingBar_1.DataSourcePagingBar;

var Control_1 = __webpack_require__(/*! ./Control */ "./out-es5/Control.js");

exports.Control = Control_1.Control;

var maishu_toolkit_1 = __webpack_require__(/*! maishu-toolkit */ "maishu-toolkit");

exports.DataSource = maishu_toolkit_1.DataSource;
exports.DataSourceSelectArguments = maishu_toolkit_1.DataSourceSelectArguments;

var index_2 = __webpack_require__(/*! ./cells/index */ "./out-es5/cells/index.js");

exports.GridViewCell = index_2.GridViewCell;
exports.GridViewDataCell = index_2.GridViewDataCell;

var index_3 = __webpack_require__(/*! ./rows/index */ "./out-es5/rows/index.js");

exports.GridViewDataRow = index_3.GridViewDataRow;
exports.GridViewRowType = index_3.GridViewRowType;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./out-es5/rows/GridViewDataRow.js":
/*!*****************************************!*\
  !*** ./out-es5/rows/GridViewDataRow.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var GridViewRow_1 = __webpack_require__(/*! ./GridViewRow */ "./out-es5/rows/GridViewRow.js");

var GridViewRowType_1 = __webpack_require__(/*! ./GridViewRowType */ "./out-es5/rows/GridViewRowType.js");

var GridViewDataRow = /*#__PURE__*/function (_GridViewRow_1$GridVi) {
  _inherits(GridViewDataRow, _GridViewRow_1$GridVi);

  var _super = _createSuper(GridViewDataRow);

  function GridViewDataRow(gridView, dataItem, rowElement) {
    var _this;

    _classCallCheck(this, GridViewDataRow);

    _this = _super.call(this, GridViewRowType_1.GridViewRowType.Data, rowElement, gridView);
    _this._dataItem = dataItem;

    for (var i = 0; i < gridView.columns.length; i++) {
      var column = gridView.columns[i];
      var cell = column.createItemCell(dataItem, _this.gridView.elementProvider.createCellElement("body"));
      cell.visible = column.visible;

      _this.appendChild(cell);
    }

    return _this;
  }

  _createClass(GridViewDataRow, [{
    key: "dataItem",
    get: function get() {
      return this._dataItem;
    }
  }]);

  return GridViewDataRow;
}(GridViewRow_1.GridViewRow);

exports.GridViewDataRow = GridViewDataRow;
//# sourceMappingURL=GridViewDataRow.js.map


/***/ }),

/***/ "./out-es5/rows/GridViewRow.js":
/*!*************************************!*\
  !*** ./out-es5/rows/GridViewRow.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var __classPrivateFieldSet = void 0 && (void 0).__classPrivateFieldSet || function (receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }

  privateMap.set(receiver, value);
  return value;
};

var __classPrivateFieldGet = void 0 && (void 0).__classPrivateFieldGet || function (receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }

  return privateMap.get(receiver);
};

var _rowType, _gridView;

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Control_1 = __webpack_require__(/*! ../Control */ "./out-es5/Control.js");

var Errors_1 = __webpack_require__(/*! ../Errors */ "./out-es5/Errors.js");

var GridViewRow = /*#__PURE__*/function (_Control_1$Control) {
  _inherits(GridViewRow, _Control_1$Control);

  var _super = _createSuper(GridViewRow);

  function GridViewRow(rowType, rowElement, gridView) {
    var _this;

    _classCallCheck(this, GridViewRow);

    _this = _super.call(this, rowElement);

    _rowType.set(_assertThisInitialized(_this), void 0);

    _gridView.set(_assertThisInitialized(_this), void 0);

    if (gridView == null) throw Errors_1.Errors.argumentNull("gridView");

    __classPrivateFieldSet(_assertThisInitialized(_this), _gridView, gridView);

    __classPrivateFieldSet(_assertThisInitialized(_this), _rowType, rowType);

    return _this;
  }

  _createClass(GridViewRow, [{
    key: "rowType",
    get: function get() {
      return __classPrivateFieldGet(this, _rowType);
    }
  }, {
    key: "gridView",
    get: function get() {
      return __classPrivateFieldGet(this, _gridView);
    }
  }, {
    key: "cells",
    get: function get() {
      var cells = new Array();

      for (var i = 0; i < this.element.children.length; i++) {
        var cell = Control_1.Control.getControlByElement(this.element.children[i]);
        console.assert(cell != null);
        cells[i] = cell;
      }

      return cells;
    }
  }]);

  return GridViewRow;
}(Control_1.Control);

exports.GridViewRow = GridViewRow;
_rowType = new WeakMap(), _gridView = new WeakMap(); // function findParentElement(element: HTMLElement, parentTagName: string) {
//     console.assert(element != null);
//     console.assert(parentTagName != null);
//     parentTagName = parentTagName.toUpperCase();
//     let p = element.parentElement;
//     while (p) {
//         if (p.tagName == parentTagName)
//             return p;
//         p = p.parentElement;
//     }
// }
//# sourceMappingURL=GridViewRow.js.map


/***/ }),

/***/ "./out-es5/rows/GridViewRowType.js":
/*!*****************************************!*\
  !*** ./out-es5/rows/GridViewRowType.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var GridViewRowType;

(function (GridViewRowType) {
  GridViewRowType[GridViewRowType["Header"] = 0] = "Header";
  GridViewRowType[GridViewRowType["Footer"] = 1] = "Footer";
  GridViewRowType[GridViewRowType["Data"] = 2] = "Data";
  GridViewRowType[GridViewRowType["Paging"] = 3] = "Paging";
  GridViewRowType[GridViewRowType["Empty"] = 4] = "Empty";
})(GridViewRowType = exports.GridViewRowType || (exports.GridViewRowType = {}));
//# sourceMappingURL=GridViewRowType.js.map


/***/ }),

/***/ "./out-es5/rows/index.js":
/*!*******************************!*\
  !*** ./out-es5/rows/index.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var GridViewRow_1 = __webpack_require__(/*! ./GridViewRow */ "./out-es5/rows/GridViewRow.js");

exports.GridViewRow = GridViewRow_1.GridViewRow;

var GridViewRowType_1 = __webpack_require__(/*! ./GridViewRowType */ "./out-es5/rows/GridViewRowType.js");

exports.GridViewRowType = GridViewRowType_1.GridViewRowType;

var GridViewDataRow_1 = __webpack_require__(/*! ./GridViewDataRow */ "./out-es5/rows/GridViewDataRow.js");

exports.GridViewDataRow = GridViewDataRow_1.GridViewDataRow;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "maishu-toolkit":
/*!*********************************!*\
  !*** external "maishu-toolkit" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_maishu_toolkit__;

/***/ })

/******/ });
});
//# sourceMappingURL=index.es5.js.map