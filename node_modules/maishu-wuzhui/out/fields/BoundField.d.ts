import { DataControlFieldParams, DataControlField } from "./DataControlField";
import { GridViewCell, GridViewCellControl } from "../cells/index";
import { Rule } from "maishu-dilu";
export interface BoundFieldParams<T> extends DataControlFieldParams {
    dataField: Extract<keyof T, string>;
    dataFormatString?: string;
    controlStyle?: Partial<CSSStyleDeclaration>;
    nullText?: string;
    readOnly?: boolean;
    valueType?: ValueType;
    validateRules?: Rule[];
    emptyText?: string;
}
export declare type ValueType = 'number' | 'date' | 'string' | 'boolean';
export declare class BoundField<T, P extends BoundFieldParams<T> = BoundFieldParams<T>> extends DataControlField<T, P> {
    /**
     * Gets the caption displayed for a field when the field's value is null.
     */
    get nullText(): string;
    createItemCell(dataItem: T, cellElement?: HTMLElement): GridViewCell;
    /**
     * Gets the field for the value.
     */
    get dataField(): keyof T;
    /**
     * Gets the string that specifies the display format for the value of the field.
     */
    get dataFormatString(): string | undefined;
    get controlStyle(): Partial<CSSStyleDeclaration>;
    get readOnly(): boolean;
    get validateRules(): Rule[];
    createControl(): GridViewCellControl;
}
